[{"C:\\Users\\Megal\\Documents\\catchy-party\\src\\main.ts":"1","C:\\Users\\Megal\\Documents\\catchy-party\\src\\App.vue":"2","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Footer\\Footer.vue":"3","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Header\\Header.vue":"4","C:\\Users\\Megal\\Documents\\catchy-party\\src\\router\\index.ts":"5","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Homepage\\Homepage.vue":"6","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Contact\\Contact.vue":"7","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\CGU\\CGU.vue":"8","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Game-select\\Game-select.vue":"9","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Game1-screen\\Game1-screen.vue":"10","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\About\\About.vue":"11","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Listen-screen\\Listen-screen.vue":"12","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Validation-screen\\Validation-screen.vue":"13","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Wts\\WtsComponent.vue":"14","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Rules-screen\\Rules-screen.vue":"15","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Ending-screen\\Ending-screen.vue":"16","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\ProfilePicture\\ProfilePicture.vue":"17","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Lang\\Lang.vue":"18","C:\\Users\\Megal\\Documents\\catchy-party\\src\\assets\\svg\\avatars\\eyes\\index.ts":"19","C:\\Users\\Megal\\Documents\\catchy-party\\src\\assets\\svg\\avatars\\mouths\\index.ts":"20","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Infos\\Infos.vue":"21","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Keyboard-notes\\KeyboardNotes.vue":"22","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Classico\\ClassicoComponent.vue":"23","C:\\Users\\Megal\\Documents\\catchy-party\\src\\assets\\svg\\avatars\\bodies\\index.ts":"24"},{"size":447,"mtime":1717747224688,"results":"25","hashOfConfig":"26"},{"size":595,"mtime":1717756338690,"results":"27","hashOfConfig":"26"},{"size":695,"mtime":1717747224672,"results":"28","hashOfConfig":"26"},{"size":483,"mtime":1717756338699,"results":"29","hashOfConfig":"26"},{"size":2935,"mtime":1717747224696,"results":"30","hashOfConfig":"26"},{"size":9414,"mtime":1717756544921,"results":"31","hashOfConfig":"26"},{"size":1337,"mtime":1717756338699,"results":"32","hashOfConfig":"26"},{"size":1565,"mtime":1717747224665,"results":"33","hashOfConfig":"26"},{"size":18620,"mtime":1717756338699,"results":"34","hashOfConfig":"26"},{"size":2204,"mtime":1717747224672,"results":"35","hashOfConfig":"26"},{"size":1052,"mtime":1717747224665,"results":"36","hashOfConfig":"26"},{"size":197,"mtime":1717747224680,"results":"37","hashOfConfig":"26"},{"size":2325,"mtime":1717747224688,"results":"38","hashOfConfig":"26"},{"size":11171,"mtime":1717756338705,"results":"39","hashOfConfig":"26"},{"size":631,"mtime":1717747224688,"results":"40","hashOfConfig":"26"},{"size":1818,"mtime":1717747224672,"results":"41","hashOfConfig":"26"},{"size":901,"mtime":1717747224680,"results":"42","hashOfConfig":"26"},{"size":1710,"mtime":1717747224680,"results":"43","hashOfConfig":"26"},{"size":115,"mtime":1717747224647,"results":"44","hashOfConfig":"26"},{"size":119,"mtime":1717747224647,"results":"45","hashOfConfig":"26"},{"size":5683,"mtime":1717756338705,"results":"46","hashOfConfig":"26"},{"size":26252,"mtime":1717756338705,"results":"47","hashOfConfig":"26"},{"size":16803,"mtime":1717756338697,"results":"48","hashOfConfig":"26"},{"size":119,"mtime":1717747224643,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ogajmq",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Megal\\Documents\\catchy-party\\src\\main.ts",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\App.vue",["108","109","110"],"<template>\r\n\r\n  <headerApp></headerApp>\r\n  <RouterView />\r\n  <div class=\"footer\" id=\"footer\">\r\n    <footerApp></footerApp>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue';\r\nimport { RouterLink, RouterView } from 'vue-router';\r\nimport footerApp from '@/components/Footer/Footer.vue';\r\nimport headerApp from '@/components/Header/Header.vue';\r\n\r\nexport default defineComponent({\r\n  name: 'App',\r\n  components: {\r\n    footerApp,\r\n    headerApp,\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n  @import './main.css';\r\n  @import './mobile.css';\r\n</style>\r\n","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Footer\\Footer.vue",["111","112"],"<template>\r\n  <footer>\r\n    <div class=\"footerLinks\">\r\n      <RouterLink to=\"/about\">{{ $t('A_PROPOS') }}</RouterLink>\r\n      <RouterLink to=\"/cgu\">{{ $t('CGU') }}</RouterLink>\r\n      <RouterLink to=\"/contact\">{{ $t('CONTACTS') }}</RouterLink>\r\n    </div>\r\n    <div class=\"footerText\">\r\n      <p>&copy; {{ $t('TOUT_DROIT_RESERVE') }}</p>\r\n    </div>\r\n  </footer>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { RouterLink, RouterView } from 'vue-router';\r\n\r\nexport default {\r\n  name: 'footerApp',\r\n  data() {\r\n    return {\r\n      lang: ''\r\n    };\r\n  },\r\n  mounted() {\r\n    this.lang = localStorage.getItem('lang');\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n  @import \"./footer.css\";\r\n</style>\r\n\r\n\r\n","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Header\\Header.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\router\\index.ts",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Homepage\\Homepage.vue",["113"],"<template>\r\n    <langApp v-if=\"homepage === true\"></langApp>\r\n    <button v-if=\"homepage === false\" @click=\"back()\" class=\"backBtn\">{{ $t('RETOUR') }}</button>\r\n    <form v-if=\"homepage === true\" class=\"homepage-form\">\r\n        <div class=\"inputs-container\">\r\n            <input type=\"text\" class=\"textInput\" :placeholder=\"$t('UTILISATEUR')\" v-model=\"pseudo\" maxlength=\"15\">\r\n\r\n            <button v-if=\"homepage === true && !roomId\" class=\"submitBtn\" @click=\"handleSubmit()\">{{ $t('JOUER') }}</button>\r\n            <div v-else v-for=\"room in rooms\" :key=\"room.id\">\r\n                <button v-if=\"room.id === roomId\" @click=\"joinRoom(room)\" class=\"submitBtn\">{{ $t('REJOINDRE_PARTIE') }}</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"avatar-choice\">\r\n            <h3 class=\"no-background\" v-if=\"homepage === true && !roomId\">{{ $t('AVATAR') }}</h3>\r\n            <div v-else v-for=\"room in rooms\" :key=\"room.id\">\r\n                <h3 class=\"no-background\" v-if=\"room.id === roomId\">{{ $t('REJOINDRE_SALLE') }} {{ room.players[0].username }}</h3>\r\n            </div>\r\n            \r\n            <div class=\"avatar-container\">\r\n                <ul class=\"arrows\">\r\n                    <button class=\"no-hover\" type=\"button\" @click=\"previousAvatarPart('eyes')\"><img src=\"@/assets/svg/icons/arrowL.svg\"></button>\r\n                    <button class=\"no-hover\" type=\"button\" @click=\"previousAvatarPart('mouth')\"><img src=\"@/assets/svg/icons/arrowL.svg\"></button>\r\n                    <button class=\"no-hover\" type=\"button\" @click=\"previousAvatarPart('body')\"><img src=\"@/assets/svg/icons/arrowL.svg\"></button>\r\n                </ul>\r\n\r\n                <ProfilePicture :width=\"300\" :bodyIndex=\"avatarData[0]\" :eyesIndex=\"avatarData[1]\" :mouthIndex=\"avatarData[2]\" />\r\n\r\n                <ul class=\"arrows\">\r\n                    <button class=\"no-hover\" type=\"button\" @click=\"nextAvatarPart('eyes')\" ><img src=\"@/assets/svg/icons/arrowR.svg\"></button>\r\n                    <button class=\"no-hover\" type=\"button\" @click=\"nextAvatarPart('mouth')\"><img src=\"@/assets/svg/icons/arrowR.svg\"></button>\r\n                    <button class=\"no-hover\" type=\"button\" @click=\"nextAvatarPart('body')\"><img src=\"@/assets/svg/icons/arrowR.svg\"></button>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </form>\r\n\r\n    <gameSelect v-if=\"!homepage\" :socket=\"socket\"></gameSelect>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport io from 'socket.io-client';\r\nimport gameSelect from '../Game-select/Game-select.vue';\r\nimport ProfilePicture from '@/components/ProfilePicture/ProfilePicture.vue';\r\nimport { defineComponent, ref } from 'vue';\r\n\r\nimport langApp from '@/components/Lang/Lang.vue';\r\n\r\nimport bodyFolder from '@/assets/svg/avatars/bodies';\r\nimport eyesFolder from '@/assets/svg/avatars/eyes';\r\nimport mouthFolder from '@/assets/svg/avatars/mouths';\r\n\r\n\r\ninterface Room {\r\n    id: string;\r\n    players: {\r\n        host: boolean,\r\n        avatar: string,\r\n        roomId: string,\r\n        socketId: string,\r\n        username: string,\r\n        idea: boolean,\r\n        tabAttributed: boolean,\r\n        lang: string,\r\n    }[];\r\n}\r\n\r\nexport default defineComponent({\r\n    name: 'home_page',\r\n    components: {\r\n        gameSelect,\r\n        ProfilePicture,\r\n        langApp\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            homepage: true,\r\n            lang: '',\r\n            rooms: [] as Room[],\r\n            pseudo: '',\r\n            tutorialText: '',\r\n            socket: io('https://catchyparty.onrender.com'),\r\n            stepsFr: [\r\n                \"Étape 1 : Choisir un pseudo...\",\r\n                \"Étape 2 : Choisir un avatar...\",\r\n                \"Étape 3 : Et choisissez vos jeux !\"\r\n            ],\r\n            stepsEn: [\r\n                \"Step 1 : Choose a username...\",\r\n                \"Step 2 : Choose a avatar...\",\r\n                \"Step 3 : And select your games !\"\r\n            ],\r\n            currentStep: 0,\r\n            player: {\r\n                host: false,\r\n                avatar: [0,0,0],\r\n                roomId: \"\",\r\n                username: \"\",\r\n                socketId: \"\",\r\n                idea: false,\r\n                tabAttributed: false,\r\n            },\r\n            roomId: \"\",\r\n\r\n            avatarData: [0, 0, 0] as [number, number, number],\r\n            currentAvatar: {},\r\n            maxBodyIndex: bodyFolder.length,\r\n            maxEyesIndex: eyesFolder.length,\r\n            maxMouthIndex: mouthFolder.length\r\n        }\r\n    },\r\n    mounted() {    \r\n        localStorage.setItem('homepage', JSON.stringify(this.homepage));\r\n        const getLang = localStorage.getItem('lang');\r\n        if(getLang){\r\n            this.lang = getLang;\r\n        } else{\r\n            this.lang = 'fr';\r\n            localStorage.setItem('lang',this.lang);\r\n        }\r\n\r\n        if (this.homepage) {\r\n            setInterval(() => {\r\n                this.updRooms();\r\n            }, 20);\r\n        }\r\n\r\n        const queryString = window.location.search;\r\n        const urlParams = new URLSearchParams(queryString);\r\n        const roomId = urlParams.get('room');\r\n        this.roomId = roomId ?? \"\";\r\n\r\n        if(this.lang == 'fr'){\r\n            this.nextStepFr();\r\n        }else{\r\n            this.nextStepEn();\r\n        }\r\n        this.changeLanguage();\r\n    },\r\n    computed: {        \r\n        bodySrc() {\r\n            return require(`@/assets/svg/avatars/bodies/body${this.avatarData[0]}.svg`);\r\n        },\r\n        eyesSrc() {\r\n            return require(`@/assets/svg/avatars/eyes/eyes${this.avatarData[1]}.svg`);\r\n        },\r\n        mouthSrc() {\r\n            return require(`@/assets/svg/avatars/mouths/mouth${this.avatarData[2]}.svg`);\r\n        },\r\n    },\r\n    methods: {\r\n        updRooms() {\r\n            this.socket.emit('get rooms');\r\n\r\n            this.socket.on('list rooms', (rooms: Room[]) => {\r\n                this.rooms = rooms;\r\n            });\r\n        },\r\n\r\n        joinRoom(room: Room) {\r\n            if (this.pseudo) {\r\n                this.player.roomId = room.id;\r\n                this.player.username = this.pseudo;\r\n                this.player.socketId = this.socket.id ?? \"\";\r\n                this.player.avatar = this.avatarData;\r\n\r\n                this.socket.emit('playerData', this.player);\r\n                this.homepage = false;\r\n                localStorage.setItem('homepage', JSON.stringify(this.homepage));\r\n                this.roomId = \"\";\r\n            }\r\n        },\r\n\r\n        handleSubmit() {\r\n            if (this.pseudo) {\r\n                this.player.host = true;\r\n                this.player.username = this.pseudo;\r\n                this.player.socketId = this.socket.id ?? \"\";\r\n                this.player.avatar = this.avatarData;\r\n\r\n                this.socket.emit('playerData', this.player);\r\n\r\n                this.homepage = false;\r\n                localStorage.setItem('homepage', JSON.stringify(this.homepage));\r\n            } else {\r\n                alert(\"Tu dois entrer un pseudo !\")\r\n            }\r\n        },\r\n        nextStepFr() {\r\n            this.currentStep++;\r\n            if (this.currentStep < this.stepsFr.length) {\r\n                this.tutorialText = this.stepsFr[this.currentStep];\r\n                setTimeout(this.nextStepFr, 5000);\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.currentStep = 0;\r\n                    this.tutorialText = this.stepsFr[this.currentStep];\r\n                    setTimeout(this.nextStepFr, 5000);\r\n                }, 5000);\r\n            }\r\n        },\r\n        nextStepEn() {\r\n            this.currentStep++;\r\n            if (this.currentStep < this.stepsEn.length) {\r\n                this.tutorialText = this.stepsEn[this.currentStep];\r\n                setTimeout(this.nextStepEn, 5000);\r\n            } else {\r\n                setTimeout(() => {\r\n                    this.currentStep = 0;\r\n                    this.tutorialText = this.stepsEn[this.currentStep];\r\n                    setTimeout(this.nextStepEn, 5000);\r\n                }, 5000);\r\n            }\r\n        },\r\n        \r\n        previousAvatarPart(part: string) {\r\n            if (part === 'body') {\r\n                this.avatarData[0] = (this.avatarData[0] - 1 + this.maxBodyIndex) % this.maxBodyIndex;\r\n            } else if (part === 'eyes') {\r\n                this.avatarData[1] = (this.avatarData[1] - 1 + this.maxEyesIndex) % this.maxEyesIndex;\r\n            } else if (part === 'mouth') {\r\n                this.avatarData[2] = (this.avatarData[2] - 1 + this.maxMouthIndex) % this.maxMouthIndex;\r\n            }\r\n        },\r\n        nextAvatarPart(part: string) {\r\n            if (part === 'body') {\r\n                this.avatarData[0] = (this.avatarData[0] + 1) % this.maxBodyIndex;\r\n            } else if (part === 'eyes') {\r\n                this.avatarData[1] = (this.avatarData[1] + 1) % this.maxEyesIndex;\r\n            } else if (part === 'mouth') {\r\n                this.avatarData[2] = (this.avatarData[2] + 1) % this.maxMouthIndex;\r\n            }\r\n        },\r\n\r\n        reload() {\r\n            window.location.search = '?room=';\r\n        },\r\n\r\n        back(){\r\n            window.location.search = '?room=';\r\n        },\r\n\r\n        changeLanguage() {\r\n            this.$i18n.locale = localStorage.getItem('lang') || 'fr'\r\n        },\r\n    },\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n    @import url(\"./homepage.css\");\r\n    @import url(\"./homepage-mobile.css\");\r\n</style>\r\n","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Contact\\Contact.vue",["114"],"<template>\r\n    <langApp></langApp>\r\n    <main class=\"contact-main\">\r\n        <h1>{{ $t('CONTACTEZ_NOUS') }}</h1>\r\n        <p>{{ $t('CONTACTEZ_NOUS_TEXTE') }}</p>\r\n        <div>\r\n            <span id=\"email\">catchyparty0@gmail.com</span>\r\n            <img class=\"email-icon\" src=\"@/assets/svg/icons/copy.svg\" alt=\"Email Icon\" width=\"20\" height=\"20\" @click=\"copyEmail()\">\r\n        </div>\r\n    </main>\r\n        \r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue';\r\nimport langApp from '@/components/Lang/Lang.vue';\r\n\r\nexport default defineComponent({\r\n    name: 'contactApp',\r\n    components: {\r\n        langApp\r\n    },\r\n    methods:{\r\n        copyEmail() {\r\n            const emailElement = document.getElementById('email');\r\n            const email = emailElement?.textContent;\r\n\r\n            if (email) {\r\n                const tempInput = document.createElement('input');\r\n                tempInput.value = email;\r\n                document.body.appendChild(tempInput);\r\n                tempInput.select();\r\n                document.execCommand('copy');\r\n                document.body.removeChild(tempInput);\r\n                \r\n                alert(this.$t('EMAIL_COPIEE') + email);\r\n            }\r\n        }\r\n    },\r\n    });\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n    @import './contact.css';\r\n</style>\r\n","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\CGU\\CGU.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Game-select\\Game-select.vue",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"<template>\r\n    <!-- <h1>Current round : {{ currentRound }}</h1> -->\r\n    <InfosComponent  v-if=\"game === 0\"/>\r\n    <div class=\"content\" id=\"content\">\r\n        <section class=\"playersList\">\r\n            <h3>{{ $t('JOUEURS') }}</h3>\r\n            <div class=\"playersContainer\" v-for=\"room in rooms\" :key=\"room.id\">\r\n                <div class=\"playerContainer\" v-if=\"room.id === player.roomId\">\r\n                    <div v-for=\"rplayer in room.players\" :key=\"rplayer.socketId\" :class=\"{ currentPlayer: rplayer.socketId === player.socketId }\">\r\n\r\n                        <div class=\"profile-picture-wrapper\" :class=\"{ hosting: rplayer.host }\" >\r\n                            <ProfilePicture class=\"white-profile\" :bodyIndex=\"rplayer.avatar[0]\"\r\n                            :eyesIndex=\"rplayer.avatar[1]\" :mouthIndex=\"rplayer.avatar[2]\" />\r\n                        </div>\r\n\r\n                        <span class=\"pseudoPlayer\">\r\n                            <span>{{ rplayer.username }}</span>\r\n\r\n                            <button v-if=\"player.host && rplayer.socketId !== player.socketId\"\r\n                                @click=\"displayHostMenu(rplayer.socketId)\"\r\n                                class=\"hostMenuButton no-background no-hover\">\r\n                                <svg width=\"10px\" height=\"15px\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#FFFFFF\"\r\n                                    class=\"bi bi-three-dots-vertical\">\r\n                                    <path\r\n                                        d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n                                </svg>\r\n                            </button>\r\n                        </span>\r\n\r\n                        <div v-bind:id=\"rplayer.socketId\" class=\"hostMenu no-background no-hover\">\r\n                            <button class=\"no-background no-hover\" @click=\"setHost(rplayer)\">{{ $t('NOUVEAU_HOTE')\r\n                                }}</button>\r\n                            <button class=\"no-background no-hover\" style=\"color: red;\"\r\n                                @click=\"kickPlayer(rplayer.socketId)\">{{ $t('EJECTER_JOUEUR') }}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button id=\"shareLink\" :class=\"{ 'shareLink': copied }\"\r\n                @click=\"copyLink\">\r\n                <!-- (`localhost:8080?room=${player.roomId}`) -->\r\n                {{ copied ? $t('COPIE') : $t('COPIER_LIEN') }}\r\n            </button>\r\n\r\n        </section>\r\n        <section class=\"personalization-section\" :class=\"{ hosting: player.host }\" v-if=\"game === 0\">\r\n            <!-- v-if=\"rooms.some(room => room.id === player.roomId)\" -->\r\n            <div class=\"games-block\">\r\n                <h3>{{ $t('SELECTION_DES_JEUX') }}</h3>\r\n\r\n                <div class=\"games-options\">\r\n                    <div class=\"all-games\">\r\n                        <div class=\"game-container\" v-for=\"game in games\" :key=\"game.id\">\r\n                            <div class=\"game\" @click=\"handleGameClick(game.id)\">\r\n                                <img :src=\"game.image\" :alt=\"game.name\" draggable=\"true\"\r\n                                    @dragstart=\"handleDragStart(game)\">\r\n                            </div>\r\n                            <p>{{ game.name }}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <h3>{{ $t('DEROULEMENT_PARTIE') }} ({{ gamesChosen.length }}/{{ maxRounds }})</h3>\r\n\r\n                <div class=\"games-selected\" @drop=\"handleDrop\" @dragover.prevent>\r\n                    <div class=\"all-games\">\r\n                        <div class=\"game-container\" v-for=\"(gameId, index) in gamesChosen\" :key=\"index\">\r\n                            <div class=\"game\" @click=\"handleRemoveGame(index)\">\r\n                                <img :src=\"getGameImage(gameId)\" :alt=\"getGameName(gameId)\">\r\n                            </div>\r\n                            <p>{{ $t('ROUND') }} {{ index + 1 }}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"!player.host\" class=\"guest-settings\">\r\n                    <h2>{{ $t('HOTE_CONFIGURE_PARTIE') }}{{ dots }}</h2>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <form @submit.prevent=\"start()\">\r\n                <button class=\"startGame\"\r\n                    :disabled=\"((currentRoomPlayers && currentRoomPlayers.players.length < 2 || gamesChosen.length < 1)) || !player.host\">\r\n                    {{ player.host ? $t('DEMARRER_PARTIE') : $t('HOST_START') }}\r\n                </button>\r\n\r\n                <div class=\"messages\">\r\n                    <span v-if=\"currentRoomPlayers\" :class=\"{ 'green-text': currentRoomPlayers.players.length >= 2 }\">\r\n                        {{ currentRoomPlayers.players.length >= 2 ? $t('ASSEZ_DE_JOUEURS') : $t('PAS_ASSEZ_DE_JOUEURS') }} ({{\r\n                        currentRoomPlayers.players.length }})\r\n                    </span>\r\n                    <span v-if=\"gamesChosen\" :class=\"{ 'green-text': gamesChosen.length >= 1 }\">\r\n                        {{ gamesChosen.length >= 1 ? $t('ASSEZ_DE_JEUX') : $t('PAS_ASSEZ_DE_JEUX') }} ({{ gamesChosen.length }})\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </section>\r\n        <!-- TODO passer en paramètre de component, l'interRoundDuration -->\r\n        <Kbnotes v-else-if=\"game === 1\" :socket=\"socket\" :roomId=\"player.roomId\"></Kbnotes>\r\n        <ClassicoComponent v-else-if=\"game === 2\" :socket=\"socket\" :player=\"player\"></ClassicoComponent>\r\n        <WtsComponent v-else-if=\"game === 3\" :socket=\"socket\" :player=\"player\"></WtsComponent>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue';\r\nimport io from 'socket.io-client';\r\nimport Kbnotes from \"@/components/Keyboard-notes/KeyboardNotes.vue\";\r\nimport ProfilePicture from \"@/components/ProfilePicture/ProfilePicture.vue\";\r\nimport WtsComponent from '../Wts/WtsComponent.vue';\r\nimport InfosComponent from '../Infos/Infos.vue';\r\nimport ClassicoComponent from '../Classico/ClassicoComponent.vue';\r\nimport { Emit } from 'vue-property-decorator';\r\n\r\ninterface Room {\r\n    id: string;\r\n    rewind: [];\r\n    gamesChosen: number[];\r\n    round: number;\r\n    players: {\r\n        host: boolean,\r\n        avatar: [number, number, number],\r\n        roomId: string,\r\n        socketId: string,\r\n        username: string,\r\n        idea: boolean,\r\n        tabAttributed: boolean,\r\n    }[];\r\n}\r\n\r\ninterface Player {\r\n    host: boolean,\r\n    avatar: [number, number, number],\r\n    roomId: string,\r\n    socketId: string,\r\n    username: string,\r\n    idea: boolean,\r\n    turn: boolean,\r\n    win: boolean,\r\n    tabAttributed: boolean,\r\n}\r\n\r\nexport default defineComponent({\r\n    name: 'game_select',\r\n    homepage: '',\r\n    components: {\r\n        Kbnotes,\r\n        ProfilePicture,\r\n        WtsComponent,\r\n        ClassicoComponent,\r\n        InfosComponent\r\n    },\r\n\r\n    props: {\r\n        socket: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            rooms: [] as Room[],\r\n            currentRoom: '',\r\n            player: {} as Player,\r\n            copied: false,\r\n            game: 0 as number,\r\n            maxRounds: 5,\r\n            currentRound: 0,\r\n            games: [\r\n                { id: 1, name: \"Keyboard-notes\", image: require(\"@/assets/svg/partinies/solar.svg\") },\r\n                { id: 2, name: \"Classico\", image: require(\"@/assets/svg/partinies/vilo.svg\") },\r\n                { id: 3, name: \"What's the situation ?\", image: require(\"@/assets/svg/partinies/blingbling.svg\") }\r\n            ],\r\n            gamesChosen: [] as number[],\r\n            draggedGameId: null as null | number,\r\n            draggedIndex: null as number | null,\r\n            dots: '' as string,\r\n            maxDots: 3,\r\n            interval: undefined as number | undefined,\r\n            interRoundDuration: 5,\r\n            isKicked: false,\r\n        }\r\n    },  \r\n    created() {\r\n        this.startDotsAnimation();\r\n    },\r\n    beforeUnmount() {\r\n        this.stopDotsAnimation();\r\n    },\r\n    computed: {\r\n        currentRoomPlayers() {\r\n            return this.rooms.find(room => room.id === this.player.roomId);\r\n        },\r\n    },\r\n    mounted() {\r\n        //Message de confirmation reload page\r\n        // window.addEventListener(\"beforeunload\", this.beforeUnloadHandler);\r\n        \r\n        // setInterval(() => {\r\n            this.updRooms();\r\n        // }, 20);\r\n        const getInfos = document.getElementById(\"infosComponent\");\r\n\r\n        if(getInfos){\r\n            getInfos.style.display = 'block';\r\n        }\r\n\r\n        this.socket.on('join room', (player: any) => {\r\n            this.player = player;\r\n            this.currentRoom = player.roomId;\r\n        });\r\n\r\n        this.socket.on('get rounds', (maxRounds: number) => {\r\n            this.maxRounds = maxRounds;\r\n        });\r\n\r\n        this.socket.on('new host', (newHostId: string) => {\r\n            console.log('This.player.socketId', this.player.socketId);\r\n\r\n            if (this.player.socketId === newHostId) {\r\n                this.player.host = true;\r\n            }\r\n        });\r\n\r\n        this.socket.on('kicked', (kickedId: string) => {\r\n            if (this.player.socketId === kickedId) {\r\n                this.isKicked = true;\r\n                this.exitRoom();\r\n                console.log('kicked');\r\n            }\r\n        });\r\n\r\n        this.socket.on('game start', (gamesChosen: []) => {\r\n\r\n            // this.gamesChosen = gamesChosen;\r\n            console.log(\"GAMES\", this.gamesChosen);\r\n            console.log(\"CURRENT ROUND\", this.currentRound);\r\n            \r\n            if (this.currentRound + 1 <= gamesChosen.length) {\r\n                switch (this.gamesChosen[this.currentRound]) {\r\n                case 1:\r\n                    console.log(\"jeu 1\");\r\n                    this.game = 1;\r\n                    break;\r\n                case 2:\r\n                    console.log(\"jeu 2\");\r\n                    if (this.player.host) {\r\n                        this.socket.emit(\"CLASSICO/start\", this.player);\r\n                    }\r\n                    this.game = 2;\r\n                    break;\r\n                case 3:\r\n                    console.log(\"jeu 3\");\r\n                    \r\n                    this.game = 3;\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n            this.socket.emit('sendPlayer', this.player);\r\n            }\r\n            else{\r\n                this.game = 0;\r\n                this.currentRound = 0;\r\n                gamesChosen = [];\r\n            }\r\n        });\r\n\r\n        this.socket.on('endgame', () => {\r\n            if (this.currentRound === this.gamesChosen.length) {\r\n                console.log(\"Partie terminée\");\r\n                this.currentRound = 0;\r\n                this.gamesChosen = [];\r\n                this.game = 0;\r\n            }\r\n            else {\r\n                this.currentRound++;\r\n                this.start();\r\n            }\r\n        })\r\n\r\n        this.socket.on('get gamesChosen', (gamesChosen: []) => {\r\n            // console.log('gamesChosen updated in local for everyone to: '+gamesChosen);\r\n            this.gamesChosen = gamesChosen;\r\n        });\r\n\r\n        document.addEventListener('click', (event: MouseEvent) => {\r\n            const modals = document.querySelectorAll('.hostMenu') as NodeListOf<HTMLElement>;\r\n            const buttons = document.querySelectorAll('.hostMenuButton') as NodeListOf<HTMLElement>;\r\n\r\n            modals.forEach((modal) => {\r\n                if (!modal.contains(event.target as Node) && !this.isButtonClicked(buttons, event.target as Node)) {\r\n                    modal.style.display = 'none';\r\n                }\r\n            });\r\n        });\r\n\r\n        // this.roundsNumber();\r\n        // this.playersNumber();\r\n        // this.updateAvatar();\r\n\r\n    },\r\n    methods: {\r\n        beforeUnloadHandler(event:any) {\r\n            if (!this.isKicked) {\r\n                const confirmationMessage = \"Êtes-vous sûr de vouloir quitter cette page ? Vous quitterez la partie en cours\";\r\n                (event || window.event).returnValue = confirmationMessage; // For IE and Firefox\r\n                return confirmationMessage; // For other browsers\r\n            }\r\n        },\r\n        updRooms() {\r\n            this.socket.emit('get rooms');\r\n\r\n            this.socket.on('list rooms', (rooms: Room[]) => {\r\n                this.rooms = rooms;\r\n                rooms.forEach(room => {\r\n                    if (this.player.roomId === room.id) {\r\n                        this.gamesChosen = room.gamesChosen;\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        startDotsAnimation() {\r\n            let count = 0;\r\n            this.interval = setInterval(() => {\r\n                count = (count + 1) % (this.maxDots + 1);\r\n                this.dots = '.'.repeat(count);\r\n            }, 1000) as unknown as number;\r\n        },\r\n        stopDotsAnimation() {\r\n            if (this.interval !== undefined) {\r\n                clearInterval(this.interval);\r\n            }\r\n        },\r\n\r\n        handleDragStart(game: { id: number }) {\r\n            if (this.player.host) {\r\n                this.draggedGameId = game.id;\r\n            }\r\n        },\r\n        handleDrop(event: DragEvent) {\r\n            event.preventDefault();\r\n            const gameId = this.draggedGameId;\r\n            if (gameId) {\r\n                this.handleGameClick(gameId);\r\n                this.draggedGameId = null;\r\n            }\r\n        },\r\n        handleGameClick(id: number) {\r\n            if (this.player.host && this.currentRoomPlayers && this.gamesChosen && this.gamesChosen.length < this.maxRounds) {\r\n                this.gamesChosen.push(id);\r\n                this.socket.emit('update gamesChosen', this.currentRoomPlayers.id, this.gamesChosen);\r\n            }\r\n        },\r\n        handleRemoveGame(index: number) {\r\n            if (this.player.host && this.currentRoomPlayers){\r\n                this.gamesChosen.splice(index, 1);\r\n                this.socket.emit('update gamesChosen', this.currentRoomPlayers.id, this.gamesChosen);\r\n            }\r\n        },\r\n\r\n        getGameName(id: number) {\r\n            const game = this.games.find(game => game.id === id);\r\n            return game ? game.name : '';\r\n        },\r\n        getGameImage(id: number) {\r\n            const game = this.games.find(game => game.id === id);\r\n            return game ? game.image : '';\r\n        },\r\n\r\n        resetPlayer() {\r\n            this.player.host = false;\r\n            this.player.username = \"\";\r\n            this.player.avatar = [0, 0, 0];\r\n            this.player.roomId = \"\";\r\n            this.player.idea = false;\r\n            this.player.tabAttributed = false;\r\n        },\r\n\r\n        exitRoom() {\r\n            this.rooms.forEach(room => {\r\n                if (room.id === this.currentRoom) {\r\n                    this.resetPlayer();\r\n                    this.socket.emit(\"exit room\");\r\n\r\n                    window.location.search = '';\r\n                }\r\n            });\r\n        },\r\n\r\n        setHost(player: any) {\r\n            this.player.host = false;\r\n            this.socket.emit(\"set host\", player);\r\n\r\n            const menuToDisplay = document.getElementById(player.socketId);\r\n\r\n            if (menuToDisplay) {\r\n                menuToDisplay.style.display = \"none\";\r\n            }\r\n        },\r\n        kickPlayer(socketId: string) {\r\n            this.rooms.forEach(room => {\r\n                if (room.id === this.currentRoom) {\r\n                    console.log(\"kick\");\r\n                    this.socket.emit(\"kick player\", socketId);\r\n                }\r\n            });\r\n        },\r\n\r\n        sendRounds() {\r\n            this.socket.emit(\"send rounds\", this.maxRounds, this.player.roomId);\r\n        },\r\n        getRounds() {\r\n            this.socket.emit(\"get rounds\");\r\n        },\r\n\r\n        copyLink() {\r\n            const link = `${window.location.origin}?room=${this.player.roomId}`;\r\n            navigator.clipboard.writeText(link).then(() => {\r\n                this.copied = true;\r\n                setTimeout(() => {\r\n                    this.copied = false;\r\n                }, 1500);\r\n            }).catch(err => {\r\n                console.error('Failed to copy text: ', err);\r\n            });\r\n        },\r\n\r\n        // playersNumber() {\r\n        //     var selectElement = document.getElementById(\"nbPlayers\");\r\n\r\n        //     for (var i = 1; i <= 10; i++) {\r\n        //         var option = document.createElement(\"option\");\r\n        //         option.text = i.toString();\r\n        //         option.value = i.toString();\r\n        //         if (selectElement) {\r\n        //             selectElement.appendChild(option);\r\n        //         }\r\n        //     }\r\n        // },\r\n        // roundsNumber() {\r\n        //     var selectElement = document.getElementById(\"nbRounds\");\r\n\r\n        //     for (var i = 1; i <= 3; i++) {\r\n        //         var option = document.createElement(\"option\");\r\n        //         option.text = i.toString();\r\n        //         option.value = i.toString();\r\n        //         if (selectElement) {\r\n        //             selectElement.appendChild(option);\r\n        //         }\r\n        //     }\r\n        // },\r\n\r\n        displayHostMenu(socketId: string) {\r\n            const menuToDisplay = document.getElementById(socketId);\r\n\r\n            if (menuToDisplay) {\r\n                /*eslint no-undef: 0*/\r\n                const modals = document.querySelectorAll('.hostMenu') as NodeListOf<HTMLElement>;\r\n\r\n                modals.forEach((modal) => {\r\n                    if (modal) {\r\n                        modal.style.display = 'none';\r\n                    }\r\n                });\r\n\r\n                menuToDisplay.style.display = \"flex\";\r\n            }\r\n        },\r\n        isButtonClicked(buttons: any, target: Node): boolean {\r\n\r\n            for (const button of buttons) {\r\n                if (button.contains(target)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        start() {\r\n            if (this.player.host) {\r\n                this.socket.emit('game started', this.gamesChosen, this.player.roomId);\r\n            }\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n@import url('./game-select.css');\r\n@import url('./game-select-mobile.css');\r\n</style>","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Game1-screen\\Game1-screen.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\About\\About.vue",["132"],"<template>\r\n    <langApp></langApp>\r\n     <main class=\"about-main\">\r\n        <section id=\"mission\">\r\n            <h2>{{ $t('NOTRE_MISSION') }}</h2>\r\n            <p>{{ $t('NOTRE_PROJET_TEXTE') }}</p>\r\n        </section>\r\n        <section id=\"equipe\">\r\n            <h2>{{ $t('NOTRE_EQUIPE') }}</h2>\r\n            <p>{{ $t('NOTRE_EQUIPE_TEXTE') }}</p>\r\n        </section>\r\n        <section id=\"vision\">\r\n            <h2>{{ $t('NOTRE_VISION') }}</h2>\r\n            <p>{{ $t('NOTRE_VISION_TEXTE') }}</p>\r\n        </section>\r\n    </main>\r\n\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue';\r\nimport langApp from '@/components/Lang/Lang.vue';\r\n\r\nexport default defineComponent({\r\n    name: 'aboutApp',\r\n    components: {\r\n        langApp\r\n    },\r\n    data() {\r\n        return {\r\n            lang: 'fr' as string | null\r\n        };\r\n    },\r\n    mounted() {\r\n        this.lang = localStorage.getItem('lang');\r\n    },\r\n});\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n    @import './about.css';\r\n    @import './about-mobile.css';\r\n</style>","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Listen-screen\\Listen-screen.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Validation-screen\\Validation-screen.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Wts\\WtsComponent.vue",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"<template>\r\n  <div class=\"content-2\">\r\n    <section v-show=\"showEnd\">\r\n      <h2>{{ $t('PARTIE_TERMINEE') }}</h2>\r\n    </section>\r\n    <section class=\"rewindAll\" v-show=\"showRewind\">\r\n      <div class=\"rewind\" v-for=\"(rewinds, index) in WTSRewindAll\" :key=\"index\" v-bind:id=\"'joueur' + index\">\r\n        <h3 v-if=\"rewinds[index].username\">{{ $t('CHOIX_DE') }} {{ rewinds[index].username }}</h3>\r\n        <div class=\"rewind2\" v-for=\"(rewind, index2) in rewinds\" :key=\"index2\">\r\n          <h3>{{ $t('SITUATION') }}</h3>\r\n          <p>{{ rewind.situation }}</p>\r\n          <h3>{{ $t('MUSIQUE_CHOISIE') }}</h3>\r\n          <p>{{ rewind.music }}</p>\r\n        </div>\r\n\r\n        <div id=\"rewind-buttons-container\">\r\n          <button @click=\"rewindBtns(0, index)\">{{ $t('AFFICHER_LE_PRECEDENT') }}</button>\r\n          <button @click=\"rewindBtns(1, index)\">{{ $t('AFFICHER_LE_SUIVANT') }}</button>\r\n          <button v-if=\"player.host\" @click=\"WTSendgame()\">{{ $t('TERMINER_LA_MANCHE') }}</button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <main class=\"game-main\" v-show=\"showGame\">\r\n      <section class=\"description\">\r\n        <h3>{{ $t('ROUND') }} {{ currentTurn + 1 }}</h3>\r\n        \r\n        <div id=\"story\">\r\n          <p>{{ content }}</p>\r\n        </div>\r\n      </section>\r\n    </main>\r\n    <div class=\"songCont\" v-show=\"showGame\">\r\n      <!-- <div class=\"after-selection\"></div> -->\r\n\r\n      <div class=\"song-cards\">\r\n        <div class=\"song-card\" v-if=\"musics[0]\" @click=\"WTSselectCard(0)\" >\r\n          <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n          <h3>{{ musics[0].title }}</h3>\r\n          <p>{{ musics[0].artiste }}</p>\r\n          <!-- <p>{{ musics[0].album }}</p> -->\r\n        </div>\r\n        <div class=\"song-card\" v-if=\"musics[1]\" @click=\"WTSselectCard(1)\">\r\n          <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n          <h3>{{ musics[1].title }}</h3>\r\n          <p>{{ musics[1].artiste }}</p>\r\n          <!-- <p>{{ musics[1].album }}</p> -->\r\n        </div>\r\n        <div class=\"song-card\" v-if=\"musics[2]\" @click=\"WTSselectCard(2)\">\r\n          <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n          <h3>{{ musics[2].title }}</h3>\r\n          <p>{{ musics[2].artiste }}</p>\r\n          <!-- <p>{{ musics[2].album }}</p> -->\r\n        </div>\r\n        <div class=\"song-card\" v-if=\"musics[3]\" @click=\"WTSselectCard(3)\">\r\n          <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n          <h3>{{ musics[3].title }}</h3>\r\n          <p>{{ musics[3].artiste }}</p>\r\n          <!-- <p>{{ musics[3].album }}</p> -->\r\n        </div>\r\n        <div class=\"song-card\" v-if=\"musics[4]\" @click=\"WTSselectCard(4)\">\r\n          <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n          <h3>{{ musics[4].title }}</h3>\r\n          <p>{{ musics[4].artiste }}</p>\r\n          <!-- <p>{{ musics[4].album }}</p> -->\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <button @click=\"WTSnextRound\" disabled id=\"submit\" class=\"submitBtn\" style=\"margin: auto;\" v-show=\"showGame\">{{ $t('VALIDER') }}</button>\r\n    <p v-show=\"isSubmitDisabled && showGame\">{{ $t('EN_ATTENTE_DE_JOUEURS') }}</p>\r\n  </div>\r\n\r\n  <!-- <img src=\"../../assets/svg/symfony.svg\" alt=\"symfony\" class=\"symfony\"> -->\r\n  <!-- <div class=\"footer\">\r\n\r\n          <footerApp></footerApp>\r\n      </div> -->\r\n</template>\r\n\r\n\r\n<!-- //²Ici le JS (regarde les autres composants pour comprendre comment ça marche ou demande nous) -->\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport data from './data.json';\r\nimport dataEn from './dataEn.json';\r\n\r\n// Permet de définir le type de chaques éléments du json\r\ninterface Situation {\r\n  id: number;\r\n  description: string;\r\n}\r\n\r\ninterface Music {\r\n  id: number;\r\n  title: string;\r\n  artiste: string;\r\n  album: string;\r\n}\r\n\r\nexport default defineComponent({\r\n  name: 'WtsComponent',\r\n  props: {\r\n    socket: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    player: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      content: '' as string,\r\n      musics: [] as Music[],\r\n      currentTurn: 0 as number,\r\n      maxTurns: 5,\r\n      situations: data.situations as Situation[],\r\n      situationsEn: dataEn.situations as Situation[],\r\n      nextRoundCounter: 0 as number,\r\n      room: [] as any,\r\n      isSubmitDisabled: false,\r\n      showGame: true,\r\n      showRewind: false,\r\n      showEnd: false,\r\n      rewindTab: [] as any,\r\n      WTSRewindAll: [] as any,\r\n      rewindCounter: 0 as number,\r\n      selectedCard: 0 as number,\r\n      lang: ''\r\n    };\r\n  },\r\n  mounted() {\r\n    const getLang = localStorage.getItem('lang');\r\n      if(getLang){\r\n          this.lang = getLang;\r\n      } else{\r\n          this.lang = 'fr';\r\n          localStorage.setItem('lang',this.lang);\r\n      }\r\n\r\n    this.resetWTSGame();\r\n    this.randomizeSituation();\r\n    this.randomizeMusics();\r\n    this.maxTurns--;\r\n\r\n    this.socket.on(\"nextRound\", (room: any) => {\r\n      this.room = room;\r\n      this.nextRoundCounter++;\r\n\r\n\r\n\r\n      if (this.room.players.length === this.nextRoundCounter && this.currentTurn < this.maxTurns) {\r\n        this.randomizeSituation();\r\n        this.randomizeMusics();\r\n\r\n        const cards: any = document.querySelectorAll(\".song-card\");\r\n\r\n        cards.forEach((card: any) => {\r\n          card.style.backgroundColor = \"#19647e\";\r\n          card.style.color = \"#f9fafa\";\r\n          card.classList.remove(\"card-flip\");\r\n        });\r\n\r\n        const submit: any = document.getElementById(\"submit\");\r\n        submit.disabled = false;\r\n        this.isSubmitDisabled = false;\r\n        // const afterSelectionDiv: any = document.querySelector(\".after-selection\");\r\n\r\n        // afterSelectionDiv.style.opacity = \"0\";\r\n        // afterSelectionDiv.style.pointerEvents = \"none\";\r\n\r\n        this.currentTurn++;\r\n        console.log(\"Next round\");\r\n        this.nextRoundCounter = 0;\r\n      }\r\n\r\n      if (this.room.players.length === this.nextRoundCounter && this.currentTurn === this.maxTurns) {\r\n        this.showGame = false;\r\n        this.showRewind = true;\r\n        this.socket.emit(\"WTS/rewind\", this.rewindTab, this.player);\r\n      }\r\n    });\r\n\r\n    this.socket.on('WTS/final rewind', (room: any) => {\r\n      this.WTSRewindAll = room.rewind;\r\n\r\n      this.rewindCounter++;\r\n      \r\n      if (this.rewindCounter === room.rewind.length) {\r\n        this.showRewind = true;\r\n        console.log(\"clearing rewind...\", this.WTSRewindAll);\r\n        \r\n        this.socket.emit(\"clear rewind\", this.player.roomId);\r\n      }\r\n\r\n    });\r\n\r\n    this.socket.on('WTSendgame', () => {\r\n      if (!this.player.host) {\r\n        this.WTSendgame();\r\n      }\r\n    });\r\n\r\n  },\r\n  methods: {\r\n    rewindBtns(order: number, id: number) {\r\n      const rewindDivs = document.querySelectorAll('.rewind');\r\n\r\n      rewindDivs.forEach(div => {\r\n        if (\"joueur\" + id === div.id) {\r\n          if (order) {\r\n            const nextDiv = document.getElementById('joueur' + (id + 1));\r\n\r\n            if (nextDiv instanceof HTMLElement && div instanceof HTMLElement) {\r\n              div.style.display = \"none\";\r\n              nextDiv.style.display = \"flex\";\r\n            }\r\n          }\r\n          else {\r\n            const previousDiv = document.getElementById('joueur' + (id - 1));\r\n            if (previousDiv instanceof HTMLElement && div instanceof HTMLElement) {\r\n              div.style.display = \"none\";\r\n              previousDiv.style.display = \"flex\";\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    resetWTSGame() {\r\n      this.content = '' as string;\r\n      this.musics = [] as Music[];\r\n      this.currentTurn = 0 as number;\r\n      this.maxTurns = 5;\r\n      this.situations = data.situations as Situation[];\r\n      this.situationsEn = dataEn.situations as Situation[];\r\n      this.nextRoundCounter = 0 as number;\r\n      this.room = [] as any;\r\n      this.isSubmitDisabled = false;\r\n      this.showGame = true;\r\n      this.showEnd = false;\r\n      this.rewindTab = [] as any;\r\n      this.selectedCard = 0 as number;\r\n\r\n      this.maxTurns--;\r\n      this.randomizeSituation();\r\n      this.randomizeMusics();\r\n\r\n      const cards: any = document.querySelectorAll(\".song-card\");\r\n\r\n      cards.forEach((card: any) => {\r\n        card.style.backgroundColor = \"#19647e\";\r\n        card.style.color = \"#f9fafa\";\r\n\r\n      });\r\n\r\n      const submit: any = document.getElementById(\"submit\");\r\n      submit.disabled = false;\r\n      this.isSubmitDisabled = false;\r\n      // const afterSelectionDiv: any = document.querySelector(\".after-selection\");\r\n\r\n      // afterSelectionDiv.style.opacity = \"0\";\r\n      // afterSelectionDiv.style.pointerEvents = \"none\";\r\n    },\r\n\r\n    WTSselectCard(number: number) {\r\n      const cards: any = document.querySelectorAll(\".song-card\");\r\n      \r\n\r\n      cards.forEach((card: any) => {\r\n        card.style.backgroundColor = \"#19647e\";\r\n        card.style.color = \"#f9fafa\";\r\n\r\n\r\n      });\r\n      cards[number].style.backgroundColor = \"#f4d35e\";\r\n      cards[number].style.color = \"#161617\";\r\n\r\n      const submit: any = document.getElementById(\"submit\");\r\n      submit.disabled = false;\r\n      this.selectedCard = number;\r\n    },\r\n    // Obtenir une situation aléatoire\r\n    randomizeSituation() {\r\n      if(this.lang == \"fr\"){\r\n        const randomSituation = this.situations[Math.floor(Math.random() * this.situations.length)];\r\n        this.content = randomSituation.description;\r\n      }else{\r\n        const randomSituation = this.situationsEn[Math.floor(Math.random() * this.situationsEn.length)];\r\n              // Récupérer la description de la situation aléatoire\r\n        this.content = randomSituation.description;\r\n      }\r\n    },\r\n\r\n    randomizeMusics() {\r\n      const musics: Music[] = data.musics;\r\n      musics.sort(() => Math.random() - 0.5);\r\n      this.musics = musics.slice(0, 5);\r\n    },\r\n\r\n    WTSnextRound() {\r\n      const submit: any = document.getElementById(\"submit\");\r\n      submit.disabled = true;\r\n      this.isSubmitDisabled = true;\r\n\r\n      const cards: any = document.querySelectorAll(\".song-card\");\r\n      console.log(this.player.username);\r\n      \r\n      this.rewindTab.push({ username: this.player.username, situation: this.content, music: cards[this.selectedCard].innerText });\r\n      \r\n      cards.forEach((card: any) => {\r\n        card.querySelectorAll(\"p\").forEach((p: HTMLElement) => p.innerText = \"\");\r\n        card.classList.add(\"card-flip\");\r\n        \r\n      });\r\n\r\n      // const afterSelectionDiv: any = document.querySelector(\".after-selection\");\r\n\r\n      // afterSelectionDiv.style.opacity = \"0.3\";\r\n      // afterSelectionDiv.style.pointerEvents = \"all\";\r\n\r\n      this.socket.emit(\"WTS/nextRound\", this.player.roomId);\r\n    },\r\n\r\n    WTSendgame() {\r\n      this.showEnd = true;\r\n      this.showGame = false;\r\n      this.showRewind = false;\r\n      console.log(\"ENDGAAAAAAME\");\r\n      \r\n      setTimeout(() => {\r\n        if (this.player.host) {\r\n          this.socket.emit(\"WTS/endgame\", this.player.roomId);\r\n        }\r\n        this.resetWTSGame();\r\n      }, 3000)\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n@import './wts.css';\r\n</style>","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Rules-screen\\Rules-screen.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Ending-screen\\Ending-screen.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\ProfilePicture\\ProfilePicture.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Lang\\Lang.vue",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\assets\\svg\\avatars\\eyes\\index.ts",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\assets\\svg\\avatars\\mouths\\index.ts",[],"C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Infos\\Infos.vue",["156"],"<template>\r\n     <!-- <div class=\"info-container\" id=\"infosComponent\"> -->\r\n    <button class=\"infosBtn\" v-if=\"showInfo\">\r\n        <img src=\"@/assets/svg/icons/infos.svg\" @click=\"showPopUp()\" alt=\"infos\" class=\"infos-icon\">\r\n    </button>\r\n    <button class=\"infosBtn\" v-else-if=\"showClose\">\r\n        <img src=\"@/assets/svg/icons/close.svg\" @click=\"closePopUp()\" alt=\"close\" class=\"infos-icon\">\r\n    </button>\r\n     <!-- </div> -->\r\n     <div v-if=\"showPopup\" class=\"popUp\">\r\n        <h3>{{ $t('REGLES') }}</h3>\r\n        <div class=\"game-infos-container\">\r\n            <div class=\"game-container\" v-for=\"game in games\" :key=\"game.id\" >\r\n                <div class=\"game\" @click=\"handleGameClick(game.id)\">\r\n                    <img :src=\"game.image\" :alt=\"game.name\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"rules\" v-if=\"rules\">\r\n            <div class=\"rule\">\r\n                    <h3 class=\"rulesGame\" v-if=\"lang == 'fr'\">\r\n                        {{ selectedGameFr }}\r\n                    </h3>\r\n                    <h3 class=\"rulesGame\" v-if=\"lang == 'en'\">\r\n                        {{ selectedGameEn }}\r\n                    </h3>\r\n            </div>\r\n            <div class=\"rule-text\">\r\n                <p class=\"rulesText\">\r\n                    {{ rules }}\r\n                </p>\r\n            </div>\r\n        </div>\r\n     </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent, ref } from 'vue';\r\n\r\nexport default defineComponent({\r\n    name: 'InfosComponent',\r\n    components: {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            games: [\r\n                { id: 1, name: \"Keyboard-notes\", image: require(\"@/assets/svg/partinies/solar.svg\") },\r\n                { id: 2, name: \"Classico\", image: require(\"@/assets/svg/partinies/vilo.svg\") },\r\n                { id: 3, name: \"What's the situation ?\", image: require(\"@/assets/svg/partinies/blingbling.svg\") }\r\n            ],\r\n            rulesFr: [\r\n                { id: 1, name: \"Keyboard-notes\", text : \"Sur le principe du téléphone arabe, chaque joueur doit entrer le nom d'une musique qu'il souhaite faire jouer à ses camarades, essayer de la reproduire à l'aide de notes de piano et deviner la musique qu'un joueur a composée.\"},\r\n                { id: 2, name: \"Classico\", text : \"À la manière d'un blindtest, les joueurs devront trouver le nom de la musique classique qui est joué le plus vite possible. Des informations complémentaires seront disponibles.\"},\r\n                { id: 3, name: \"What's the situation ?\", text : \"Différentes situations seront présentées aux joueurs et ils devront choisir les musiques qui y correspondent le plus ou qui sont les plus drôles.\"}\r\n            ],\r\n            rulesEn: [\r\n                { id: 1, name: \"Keyboard-notes\", text : \"On the principle of the Arabic telephone, each player must enter the name of a music that he wants to play to his comrades, try to reproduce it using piano notes and guess the music that a player has composed.\"},\r\n                { id: 2, name: \"Classico\", text : \"Like a blindtest, players will have to find the name of the classical music that is played as soon as possible. Further information will be available.\"},\r\n                { id: 3, name: \"What's the situation ?\", text : \"Different situations will be presented to the players and they will have to choose the music that corresponds to them the most or which are the funniest.\"}\r\n            ],\r\n            showPopup: false,\r\n            showInfo: true,\r\n            showClose: false,\r\n            selectedGameFr: 'Cliquez sur un jeu',\r\n            selectedGameEn: 'Click on a game',\r\n            lang: '',\r\n            rules: ''\r\n        }\r\n    },  \r\n    mounted() {  \r\n        const getLang = localStorage.getItem('lang');\r\n        if(getLang){\r\n            this.lang = getLang;\r\n        } else{\r\n            this.lang = 'fr';\r\n            localStorage.setItem('lang',this.lang);\r\n        }\r\n    },\r\n    methods:{\r\n        handleGameClick(id: number) {\r\n            if(this.lang == \"fr\"){\r\n                this.rulesFr.forEach(element => {\r\n                    if(id == element.id){\r\n                        this.selectedGameFr = element.name;\r\n                        this.rules = element.text;\r\n                    }\r\n                });\r\n            }else{\r\n                this.rulesEn.forEach(element => {\r\n                    if(id == element.id){\r\n                        this.selectedGameEn = element.name;\r\n                        this.rules = element.text;\r\n                    }\r\n                });\r\n            }\r\n            \r\n        },\r\n        showPopUp() {\r\n            this.showPopup = true;\r\n            this.showInfo = false;\r\n            this.showClose = true;\r\n            const getFooter = document.getElementById('footer');\r\n            const getContent = document.getElementById('content');\r\n            if(getFooter){\r\n                getFooter.style.opacity = '10%';\r\n            }\r\n            if(getContent){\r\n                getContent.style.opacity = '10%';\r\n            }\r\n        },\r\n        closePopUp() {\r\n            this.showPopup = false;\r\n            this.showInfo = true;\r\n            this.showClose = false;\r\n            const getFooter = document.getElementById('footer');\r\n            const getContent = document.getElementById('content');\r\n            if(getFooter){\r\n                getFooter.style.opacity = '100%';\r\n            }\r\n            if(getContent){\r\n                getContent.style.opacity = '100%';\r\n            }\r\n        }\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n    @import url(\"./infos.css\");\r\n    @import url(\"./infos-mobile.css\");\r\n</style>","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Keyboard-notes\\KeyboardNotes.vue",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"<template>\r\n    <div class=\"Kbnotes\">\r\n        <section class=\"rewindAll\" v-show=\"showRewind\">\r\n            <!-- <h2>{{groupedRewindAll}}</h2> -->\r\n            <div class=\"rewind\" v-for=\"(rewindGroup, index) in groupedRewindAll\" :key=\"index\"\r\n                v-bind:id=\"'joueur' + index\">\r\n                <div class=\"rewindGroup\">\r\n                    <div v-for=\"items in rewindGroup\" :key=\"items.rewindOrder\">\r\n                        <h1>{{ $t('MANCHE') }} {{ items[0].rewindOrder + 1 }}</h1>\r\n                        <h2>{{ items[0].ideas.senderName }} {{ $t('A_SOUMIS_IDEE') }} {{ items[0].ideas.idea }}</h2>\r\n                        <h2 v-if=\"items[0].sendedMusic.length > 0\">{{ $t('MUSIQUE_COMPOSEE_PAR') }} {{\r\n            items[0].sendedMusic[0].composerName }}</h2>\r\n                        <button @click=\"playSounds(items[0].sendedMusic)\">{{ $t('ECOUTE_LA_MUSIQUE') }}</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"buttons-container\">\r\n                    <button @click=\"rewindBtns(0, index)\">{{ $t('AFFICHER_LE_PRECEDENT') }}</button>\r\n                    <button @click=\"rewindBtns(1, index)\">{{ $t('AFFICHER_LE_SUIVANT') }}</button>\r\n                    <button v-if=\"player.host\" class=\"end-game-button\" @click=\"endGame()\">{{ $t('TERMINER_LA_MANCHE')}}</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <div class=\"end-game\" v-show=\"showEndGame\">\r\n            <h2 id=\"play\">{{ $t('PARTIE_TERMINEE') }}</h2>\r\n        </div>\r\n\r\n        <div class=\"first-step\" v-show=\"firstStepGame\">\r\n            <label for=\"userIdea\">{{ $t('ENTREZ_NOM_MUSIQUE') }}</label>\r\n            <input type=\"text\" v-model=\"userIdeaInput\" :placeholder=\"$t('JUSTE_ICI')\" class=\"justHere\" @keyup.enter=\"submitIdea\">\r\n            <button @click=\"submitIdea()\" :disabled=\"ideaSubmitted\">{{ $t('VALIDER') }}</button>\r\n            <p v-if=\"ideaSubmitted\">{{ $t('EN_ATTENTE_DE_JOUEURS') }}</p>\r\n        </div>\r\n\r\n        <div class=\"main-game\" v-show=\"showMainGame\">\r\n            <div class=\"timer\" v-if=\"remainingTime\">\r\n                {{ $t('TEMPS_RESTANT') }} {{ remainingTime }} {{ $t('SECONDES') }}\r\n            </div>\r\n\r\n            <div class=\"topBlock\">\r\n                <div v-for=\"(item, index) in assignedIdea\" :key=\"index\" v-show=\"showIdea && item.receiverId === socket.id\">\r\n                    <h3>{{ $t('IDEE_ATTRIBUEE') }} {{ item.idea }}</h3>\r\n                </div>\r\n\r\n                <div class=\"piano-container\">\r\n                    <div v-for=\"octave in 3\" :key=\"octave\" class=\"octave\">\r\n                        <div v-for=\"note in ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B']\" :key=\"note\">\r\n                            <div :class=\"{ 'key': true, 'bemole': isBemole(note) }\" :data-note=\"`${note}${octave + 2}`\" @click=\"playSound(`${note}${octave + 2}`)\" draggable=\"true\">{{ `${note}${octave + 2}` }}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"bottomBlock\">\r\n                <div class=\"note-parameters\">\r\n                    <div id=\"note-option-container\">\r\n                        <h3>{{ $t('TA_MUSIQUE') }}</h3>\r\n\r\n                        <div id=\"option-note-container\" class=\"piano\">\r\n                            <p v-show=\"music.length === 0\">{{ $t('GLISSE_LES_NOTES') }} {{ $t('POUR_COMPOSER_TA_MUSIQUE') }}</p>\r\n                            <div v-for=\"(note, index) in music\" :key=\"note.infos.id\" \r\n                                :class=\"{ 'key': true, 'selected-note': note.infos.id === noteSelectedId }\" \r\n                                @click=\"selectNoteAndPlaySound(note.infos.id)\"\r\n                                :style=\"{ width: `${note.infos.duration * 50}px`, 'margin-right': `${index < music.length - 1 ? note.infos.interval * 20 : 0}px` }\">\r\n                                {{ note.infos.note }}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"note-option\" v-if=\"music.length > 0 && noteSelectedId && selectedNote\">\r\n                            <div>\r\n                                <span>{{ $t('NOTE_DURATION') }}</span>\r\n                                <input type=\"range\" min=\"0.5\" max=\"2\" step=\"0.25\" v-model=\"selectedNote.infos.duration\">\r\n                                <p>{{ selectedNote.infos.duration }}s</p>\r\n                            </div>\r\n                            <div>\r\n                                <span>{{ $t('NOTE_INTERVAL') }}</span>\r\n                                <input type=\"range\" min=\"0.0\" max=\"2\" step=\"0.25\" v-model=\"selectedNote.infos.interval\">\r\n                                <p>{{ selectedNote.infos.interval }}s</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <button @click=\"deleteNote()\" v-if=\"noteSelectedId\">{{ $t('SUPPRIMER_LA_NOTE') }}</button>\r\n                </div>\r\n            </div>\r\n\r\n            <button id=\"play\" @click=\"handlePlayClick()\" :disabled=\"isPlaying\">\r\n                <img src=\"@/assets/svg/play.svg\" class=\"play\" alt=\"play\">\r\n                {{$t('ECOUTE_TA_MUSIQUE') }}\r\n            </button>\r\n        </div>\r\n        <div class=\"after-game\" v-show=\"showAfterGame\">\r\n            <div class=\"timer\" v-if=\"secondsLeft\">\r\n                {{ $t('TEMPS_RESTANT') }} {{ secondsLeft }} {{ $t('SECONDES') }}\r\n            </div>\r\n            <!-- <span>{{ interRoundDuration }}</span> -->\r\n            <div class=\"guess-container\">\r\n                <label for=\"guess\">{{ $t('QUELLE_MUSIQUE_ENTENDUE_?') }}</label>\r\n\r\n                <div class=\"guess-input-container\">\r\n                    <input type=\"text\" v-model=\"userIdeaInput\" :placeholder=\"$t('NOM_DE_LA_MUSIQUE')\">\r\n                    <button @click=\"handlePlayGuessingClick()\">{{ $t('ECOUTE_LA_MUSIQUE') }}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <img src=\"@/assets/gif/rotate.gif\" alt=\"rotate phone\" class=\"rotateGif\">\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\nimport { defineComponent } from 'vue';\r\nimport io from 'socket.io-client';\r\nimport { Howl } from 'howler';\r\nimport { all } from 'axios';\r\n\r\ninterface Notes {\r\n    composerName: string,\r\n    infos: {\r\n        id: string,\r\n        note: string,\r\n        duration: number,\r\n        interval: number,\r\n    }\r\n}\r\n\r\ninterface AssignedIdea {\r\n    id: string;\r\n    idea: string;\r\n}\r\n\r\ninterface Item {\r\n    ideas: {\r\n        senderName: string;\r\n        receiverName: string;\r\n        receiverId: string;\r\n        idea: string;\r\n        rewindId: string;\r\n    };\r\n    sendedMusic: {\r\n        composerName: string;\r\n        infos: {\r\n            id: string;\r\n            note: string;\r\n            duration: number;\r\n            interval: number;\r\n        };\r\n    }[];\r\n    receivedMusic: any;\r\n    rewindId: string;\r\n}\r\n\r\ninterface Player {\r\n    host: boolean,\r\n    avatar: [number, number, number],\r\n    roomId: string,\r\n    socketId: string,\r\n    username: string,\r\n    idea: boolean,\r\n    turn: boolean,\r\n    win: boolean,\r\n    tabAttributed: boolean,\r\n}\r\n\r\nexport default defineComponent({\r\n    name: 'KbNotes',\r\n    //Ici les variables utilisées dans le DOM\r\n    props: {\r\n        socket: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        roomId: {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            sounds: {} as Record<string, Howl>,\r\n            noteContainer: [],\r\n            notesDuration: [] as Notes[],\r\n            notesDuration2: [] as Notes[],\r\n            userIdeaInput: '', // Variable pour stocker la valeur de l'input\r\n            userIdeas: [] as string[], // Tableau pour stocker les réponses\r\n            guessInput: '', // Variable pour stocker la valeur de l'input\r\n            Responses: [] as string[], // Tableau pour stocker les réponses\r\n            firstStepGame: false,\r\n            ideaSubmitted: false,\r\n            gameStarted: false,\r\n            showMainGame: false,\r\n            showAfterGame: false,\r\n            showEndGame: false,\r\n            showIdea: false,\r\n            showRewind: false,\r\n            showWaitingGame: true,\r\n            // showNoteContainer: true,\r\n            // showNoteOption: false,\r\n            timerInterGame: false,\r\n            timerInGame: false,\r\n            maxRounds: 3,\r\n            currentRound: 0,\r\n            noteSelectedId: \"\",\r\n            showTimer: false,\r\n            remainingTime: 0,\r\n            roundDuration: 10, // Durée de chaque tour en secondes\r\n            interRoundDuration: 10,\r\n            timerInterval: 0 as any,\r\n            secondsLeft: 0,\r\n            player: {} as Player,\r\n            assignedIdea: {} as AssignedIdea,\r\n            tabnotes: [] as Notes[],\r\n            assignedIdeaDone: '',\r\n            rewind: [] as any[][],\r\n            rewindAll: [],\r\n            rewindCounter: 0,\r\n            rewindId: '',\r\n            rewindOrder: 0,\r\n            currentIndex: 0,\r\n            music: [] as Notes[],\r\n            music2: [] as Notes[],\r\n            isPlaying: false,\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        groupedRewindAll() {\r\n            const grouped: { [key: string]: Array<any> } = {};\r\n            this.rewindAll.forEach((manche: any) => {\r\n                manche.forEach((item: any) => {\r\n                    const rewindId = item[0].rewindId;\r\n                    if (!grouped[rewindId]) {\r\n                        grouped[rewindId] = [];\r\n                    }\r\n                    grouped[rewindId].push(item);\r\n                });\r\n            });\r\n\r\n            // Triez les groupes par l'ordre rewindOrder\r\n            Object.values(grouped).forEach(group => {\r\n                group.sort((a, b) => a[0].rewindOrder - b[0].rewindOrder);\r\n            });\r\n\r\n            return Object.values(grouped);\r\n        },\r\n        selectedNote() {\r\n            return this.music.find(note => note.infos.id === this.noteSelectedId);\r\n        }\r\n    },\r\n    // Ici tout le code procédural\r\n    mounted() {\r\n        this.resetGame();\r\n        const getInfos = document.getElementById(\"infosComponent\");\r\n        const keys = document.querySelectorAll(\".key\");\r\n        // const noteContainer = document.getElementById(\"note-container\")!;\r\n        // const noteOption = document.getElementById(\"note-option\")!;\r\n        const optionNoteContainer = document.getElementById(\"note-option-container\")!;\r\n\r\n        if(getInfos){\r\n            getInfos.style.display = 'none';\r\n        }\r\n\r\n        keys.forEach((key) => {\r\n            key.addEventListener(\"dragstart\", (event) => {\r\n                if (event instanceof DragEvent) {\r\n                    event.dataTransfer?.setData(\"text/plain\", (event.target as HTMLElement).dataset.note || \"\");\r\n                }\r\n            });\r\n        });\r\n\r\n        this.socket.on('receivePlayer', (player: any) => {\r\n            this.player = player;\r\n        });\r\n\r\n        this.socket.on('ideaSubmitted', () => {\r\n            this.ideaSubmitted = true;\r\n        });\r\n\r\n        this.socket.on('newUserIdea', () => {\r\n            this.player.idea = true;\r\n        });\r\n\r\n        this.socket.on('newTabToGuess', (NotesToGuess: any) => {\r\n            this.tabnotes = NotesToGuess;\r\n            this.rewind[this.currentRound][0].receivedMusic = [NotesToGuess, this.player.username];\r\n            console.log(\"TABNOTES : \",this.tabnotes);\r\n            console.log('NOTES RECUES');\r\n            this.player.tabAttributed = true;\r\n        });\r\n\r\n        this.socket.on('startGame', () => {\r\n            this.startGame();\r\n        });\r\n\r\n        this.socket.on('KBNOTES/final rewind', (room: any) => {\r\n            this.rewindAll = room.rewind;\r\n            console.log(\"LALALA REWIND\", room.rewind);\r\n\r\n            this.rewindCounter++;\r\n\r\n        });\r\n\r\n        this.socket.on('endgame', () => {\r\n            if (!this.player.host) {\r\n                this.endGame();\r\n            }\r\n            this.resetGame();\r\n        })\r\n\r\n        this.socket.on('MainGame', (userIdeas: any) => {\r\n\r\n            this.assignedIdea = userIdeas;\r\n            userIdeas.forEach((idea: any) => {\r\n                if (idea.receiverId === this.player.socketId) {\r\n                    this.rewind[this.currentRound][0].ideas = idea;\r\n                    this.rewindId = idea.rewindId;\r\n                    this.rewind[this.currentRound][0].rewindOrder = this.rewindOrder;\r\n                    this.rewindOrder++;\r\n                    if (this.rewind[this.currentRound][0].rewindId === '') {\r\n                        this.rewind[this.currentRound][0].rewindId = idea.rewindId;\r\n                    }\r\n                    console.log(\"REWIND ID LOG\", this.rewind);\r\n                }\r\n            });\r\n\r\n            this.firstStepGame = false;\r\n            this.showMainGame = true;\r\n            this.showAfterGame = false;\r\n            this.showEndGame = false;\r\n            this.showIdea = true;\r\n            this.remainingTime = this.roundDuration;\r\n            if (this.currentRound === 0) {\r\n                this.playRound();\r\n            }\r\n            console.log('La partie a démarré côté client...');\r\n            this.gameStarted = true; // Met à jour gameStarted pour désactiver le bouton \"Jouer\"\r\n        });\r\n\r\n        optionNoteContainer.addEventListener(\"dragover\", (event) => {\r\n            event.preventDefault();\r\n        });\r\n\r\n        optionNoteContainer.addEventListener(\"drop\", (event) => {\r\n            this.handleDrop(event);\r\n        });\r\n    },\r\n    methods: {\r\n        isBemole(note: string) {\r\n            return note.length === 2 && note[1] === 'b';\r\n        },\r\n        rewindBtns(order: number, id: number) {\r\n            const rewindDivs = document.querySelectorAll('.rewind');\r\n\r\n            rewindDivs.forEach(div => {\r\n                if (\"joueur\" + id === div.id) {\r\n                    if (order) {\r\n                        const nextDiv = document.getElementById('joueur' + (id + 1));\r\n\r\n                        if (nextDiv instanceof HTMLElement && div instanceof HTMLElement) {\r\n                            div.style.display = \"none\";\r\n                            nextDiv.style.display = \"flex\";\r\n                        }\r\n                    }\r\n                    else {\r\n                        const previousDiv = document.getElementById('joueur' + (id - 1));\r\n                        if (previousDiv instanceof HTMLElement && div instanceof HTMLElement) {\r\n                            div.style.display = \"none\";\r\n                            previousDiv.style.display = \"flex\";\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        updateDuration(id: string, duration: number) {\r\n            const note = this.music.find(note => note.infos.id === id);\r\n            if (note) {\r\n                note.infos.duration = duration;\r\n            }\r\n        },\r\n\r\n        updateInterval(id: string, interval: number) {\r\n            const note = this.music.find(note => note.infos.id === id);\r\n            if (note) {\r\n                note.infos.interval = interval;\r\n            }\r\n        },\r\n\r\n        deleteNote() {\r\n            this.music = this.music.filter(note => note.infos.id !== this.noteSelectedId);\r\n            if (this.music.length){\r\n                this.noteSelectedId = this.music[0].infos.id;\r\n            } else {\r\n                this.noteSelectedId = \"\";\r\n            }\r\n        },\r\n\r\n        playSounds(soundList: any[] = []) {\r\n            if (!this.isPlaying){\r\n                this.isPlaying = true;\r\n                const notesToPlay = soundList.length > 0 ? soundList : this.music;\r\n                let currentTime = 0;\r\n\r\n                notesToPlay.forEach((item: any, index: any) => {\r\n                    const sound = new Howl({\r\n                        src: [`./sounds/${item.infos.note}.mp3`]\r\n                    });\r\n\r\n                    if (sound) {\r\n                        const duration = parseFloat(item.infos.duration);\r\n                        const interval = parseFloat(item.infos.interval);\r\n\r\n                        setTimeout(() => {\r\n                            console.log(`Playing sound: ${item.infos.note} for ${duration} seconds`);\r\n                            sound.play();\r\n\r\n                            setTimeout(() => {\r\n                                console.log(`Stopping sound: ${item.infos.note}`);\r\n                                sound.stop();\r\n                            }, duration * 1000);\r\n                            console.log(\"currentTime: \"+ currentTime);\r\n\r\n\r\n\r\n                        }, currentTime * 1000);\r\n\r\n                        currentTime += (duration + interval);\r\n                    }\r\n                });\r\n                setTimeout(() => {\r\n                    this.isPlaying = false;\r\n                }, currentTime * 1000);     \r\n            }\r\n        },\r\n\r\n        selectNoteAndPlaySound(noteId: string) {\r\n            this.selectNote(noteId);\r\n            const note = this.music.find(note => note.infos.id === noteId);\r\n            if (note){\r\n                this.playSound(note.infos.note);\r\n            }\r\n        },\r\n\r\n        handlePlayClick() {\r\n            this.playSounds(this.music);\r\n        },\r\n\r\n        handlePlayGuessingClick() {\r\n            this.playSounds(this.tabnotes);\r\n        },\r\n\r\n        selectNote(noteId: string) {\r\n            this.noteSelectedId = noteId;\r\n        },\r\n\r\n        handleDrop(event: DragEvent) {\r\n            event.preventDefault();\r\n            if (event instanceof DragEvent) {\r\n                const note = event.dataTransfer?.getData('text/plain') || '';\r\n                const noteId = this.generateID();\r\n\r\n                const newNote: Notes = {\r\n                    composerName: this.player.username,\r\n                    infos: {\r\n                        id: noteId,\r\n                        note: note,\r\n                        duration: 1, // Durée par défaut\r\n                        interval: 0 // Intervalle par défaut\r\n                    }\r\n                };\r\n\r\n                this.music.push(newNote); \r\n                this.selectNote(newNote.infos.id)\r\n\r\n                this.sounds[note] = new Howl({\r\n                    src: [`./sounds/${note}.mp3`] // Chemin vers les fichiers audio locaux\r\n                });\r\n            }\r\n        },\r\n\r\n        generateID() {\r\n            return Math.random().toString(36).substr(2, 9);\r\n        },\r\n    \r\n        playSound(note: string) {\r\n            // Charger et jouer le son correspondant à la note\r\n            const sound = new Howl({\r\n                src: [`./sounds/${note}.mp3`] // Path to local audio files\r\n            });\r\n            sound.play();\r\n        },\r\n\r\n        startGame() {\r\n            this.gameStarted = true;\r\n            this.Firststep();\r\n        },\r\n\r\n        endGame() {\r\n            if (this.player.host) {\r\n                this.socket.emit(\"endgame\", this.player.roomId);\r\n            }\r\n        },\r\n\r\n        Firststep() {\r\n            this.firstStepGame = true;\r\n        },\r\n\r\n        playRound() {\r\n            this.timerInterval = setInterval(() => {\r\n                this.timerInGame = true;\r\n                this.timerInterGame = false;\r\n                if (this.remainingTime <= 0) {\r\n                    clearInterval(this.timerInterval);\r\n                    this.rewind[this.currentRound][0].sendedMusic = this.music;\r\n                    this.socket.emit('sendTabNotes', this.music, this.player);\r\n\r\n                    this.timerInterval = 0;\r\n                    this.currentRound++;\r\n                    this.resetRound();\r\n\r\n                    if (this.currentRound < this.maxRounds) {\r\n                        // Démarre le prochain tour si ce n'est pas le dernier\r\n                        this.showMainGame = false;\r\n                        this.showAfterGame = true;\r\n                        this.timerInGame = false;\r\n                        this.showIdea = false;\r\n                        this.timerInterGame = true;\r\n\r\n                        this.secondsLeft = this.roundDuration;\r\n\r\n                        // Décompte des 30 secondes sur le front-end\r\n                        const countdownInterval = setInterval(() => {\r\n                            if (this.secondsLeft <= 0) {\r\n                                this.submitIdea();\r\n                                console.log(this.Responses);\r\n                                clearInterval(countdownInterval); // Arrêter le deuxième timer une fois les 30 secondes écoulées\r\n                                console.log(\"c'est bon mon gars\");\r\n\r\n                                this.showMainGame = true;\r\n                                this.showAfterGame = false; // Cacher la div après 30 secondes\r\n                                this.remainingTime = this.roundDuration; // Réinitialiser le temps restant\r\n                                console.log(this.tabnotes);\r\n                                this.playRound(); // Appeler la fonction playRound() pour démarrer un nouveau tour\r\n                            } else {\r\n                                this.secondsLeft--; // Mettre à jour le compteur de secondes\r\n                                console.log(this.secondsLeft);\r\n                            }\r\n                        }, 1000); // Interval mis à 100\r\n                    } else {\r\n                        // Termine le jeu si tous les tours sont joués\r\n                        this.timerInGame = false;\r\n                        this.timerInterGame = false;\r\n                        this.socket.emit('rewind', this.rewind, this.player);\r\n                        clearInterval(this.timerInterval);\r\n                        this.showMainGame = false;\r\n                        this.showAfterGame = false;\r\n                        this.showIdea = false;\r\n                        this.showRewind = true; // Afficher la section rewind\r\n                        console.log('Fin du jeu');\r\n                    }\r\n                } else {\r\n                    this.remainingTime--;\r\n                }\r\n            }, 1000);\r\n        },\r\n\r\n        resetRound() {\r\n            this.player.idea = false;\r\n            this.player.tabAttributed = false;\r\n            this.music2 = this.music;\r\n            console.log(`je suis la musique apres avant été vidée ${this.music}`);\r\n            this.music = [];\r\n            console.log(`je suis la musique apres avoir été vidée ${this.music}`);\r\n            this.socket.emit(\"KBNOTES/reset round\", this.player.roomId);\r\n        },\r\n\r\n        resetGame() {\r\n            this.sounds = {} as Record<string, Howl>;\r\n            this.noteContainer = [];\r\n            this.notesDuration = [] as Notes[];\r\n            this.notesDuration2 = [] as Notes[];\r\n            this.userIdeaInput = ''; // Variable pour stocker la valeur de l'input\r\n            this.userIdeas = [] as string[]; // Tableau pour stocker les réponses\r\n            this.guessInput = ''; // Variable pour stocker la valeur de l'input\r\n            this.Responses = [] as string[]; // Tableau pour stocker les réponses\r\n            this.firstStepGame = true;\r\n            this.ideaSubmitted = false;\r\n            this.gameStarted = false;\r\n            this.showMainGame = false;\r\n            this.showAfterGame = false;\r\n            this.player = {} as Player;\r\n            this.showEndGame = false;\r\n            this.showIdea = false;\r\n            this.showRewind = false;\r\n            this.showWaitingGame = true;\r\n            // this.showNoteContainer = true;\r\n            // this.showNoteOption = false;\r\n            this.timerInterGame = false;\r\n            this.timerInGame = false;\r\n            this.maxRounds = 3;\r\n            this.currentRound = 0;\r\n            this.noteSelectedId = \"\";\r\n            this.showTimer = false;\r\n            this.remainingTime = 0;\r\n            this.roundDuration = 10; // Durée de chaque tour en secondes\r\n            this.interRoundDuration = 10;\r\n            this.timerInterval = 0;\r\n            this.secondsLeft = 0;\r\n            this.assignedIdea = {} as AssignedIdea;\r\n            this.tabnotes = [] as Notes[];\r\n            this.assignedIdeaDone = '';\r\n            this.rewind = [] as any[][];\r\n            this.rewindAll = [];\r\n            this.rewindCounter = 0;\r\n            this.rewindId = '';\r\n            this.rewindOrder = 0;\r\n            this.currentIndex = 0;\r\n            this.music = [] as Notes[],\r\n            this.music2 = [] as Notes[],\r\n            this.isPlaying= false,\r\n            this.socket.emit(\"clear rewind\", this.player.roomId);\r\n\r\n            this.rewindId = this.generateID();\r\n            if (this.player.host) {\r\n                this.socket.emit('play', this.roomId);\r\n            }\r\n            for (let index = 0; index < this.maxRounds; index++) {\r\n                this.rewind.push([{\r\n                    ideas: '',\r\n                    sendedMusic: '',\r\n                    receivedMusic: '',\r\n                    rewindId: '',\r\n                    rewindOrder: 0\r\n                }]);\r\n            }\r\n        },\r\n\r\n        formatTime(seconds: number): string {\r\n            const minutes: number = Math.floor(seconds / 60);\r\n            const sec: number = seconds % 60;\r\n            return `${minutes}:${sec < 10 ? '0' : ''}${sec}`;\r\n        },\r\n\r\n        submitIdea() {\r\n            // Émettre un événement \"submitIdea\" avec les données de l'utilisateur\r\n            this.socket.emit('submitIdea', this.userIdeaInput, this.player, this.rewindId);\r\n\r\n            // Réinitialiser la valeur de userIdeaInput après l'avoir envoyée au serveur\r\n            this.userIdeaInput = '';\r\n        },\r\n\r\n        PlayNotesDone() {\r\n            console.log(\"ff\");\r\n        },\r\n\r\n        showNext() {\r\n            if (this.currentIndex < this.groupedRewindAll.length - 1) {\r\n                this.currentIndex++;\r\n            }\r\n        },\r\n        showPrevious() {\r\n            if (this.currentIndex > 0) {\r\n                this.currentIndex--;\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n    @import url('./kbnotes.css');\r\n    @import url('./kbnotes-mobile.css');\r\n</style>","C:\\Users\\Megal\\Documents\\catchy-party\\src\\components\\Classico\\ClassicoComponent.vue",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"<template>\r\n    <div class=\"content2\">\r\n        <section v-show=\"showEnd\">\r\n            <h2>{{ $t('DEMARRER_JEU_SUIVANT') }}</h2>\r\n        </section>\r\n        <section class=\"rewindAll\" v-show=\"showRewind\">\r\n            <div class=\"block\">\r\n                <h3>{{ $t('RESULTAT') }}</h3>\r\n                <div v-for=\"(rewind, index) in rewindAll\" :key=\"index\" \r\n                    :class=\"['player-score', { 'first-player': rewind.foundCount === maxScore }]\">\r\n                    <span>{{ rewind.username }}</span>\r\n                    <p>{{ $t('MUSIQUES_TROUVEE') }}{{ rewind.foundCount }} / {{ maxTurns + 1 }}</p>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            <button v-if=\"player.host\" @click=\"endgame()\">{{ $t('TERMINER_LA_MANCHE') }}</button>\r\n        </section>\r\n        <div id=\"timer-container\" v-show=\"showTimer\">\r\n            <div>\r\n                <label for=\"volume-slider\">{{ $t('VOLUME') }}</label>\r\n                <input type=\"range\" id=\"volume-slider\" min=\"0\" max=\"1\" step=\"0.05\" v-model=\"volume\"\r\n                    @input=\"setVolume\" />\r\n            </div>\r\n            <div class=\"timer flow\">\r\n                <p v-show=\"showRoundTimer\">{{ $t('TEMPS_RESTANT') }} {{ timer }} {{ $t('SECONDES') }}</p>\r\n                <p v-show=\"showResponseTimer\">{{ $t('RESPONSE TIMER') }} {{ responseTimer }} {{ $t('SECONDES') }}</p>\r\n            </div>\r\n        </div>\r\n        <main class=\"game-main listen\" v-show=\"showGame\">\r\n            <h3>{{ $t('ROUND') }} {{ currentTurn + 1 }} / {{ maxTurns + 1 }}</h3>\r\n            \r\n            <div id=\"listen\" v-show=\"showListen\">\r\n                <p>{{ $t('ECOUTE') }}</p>\r\n            </div>\r\n            <div id=\"anecdoteDiv\" v-show=\"showResponse\">\r\n                <h3>{{ $t('REPONSE') }}</h3>\r\n                <p id=\"response\"></p>\r\n                <h3>{{ $t('ANECDOTE') }}</h3>\r\n                <p id=\"anecdote\"></p>\r\n            </div>\r\n        </main>\r\n        <div class=\"songCont\" v-show=\"showCards\">\r\n            <!-- <div class=\"after-selection\"></div> -->\r\n\r\n            <div class=\"song-cards\">\r\n\r\n                <div class=\"song-card\" v-if=\"classico[0]\" @click=\"selectCard(0)\">\r\n                    <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n                    <h3>{{ classico[0].title }}</h3>\r\n                    <p>{{ classico[0].artiste }}</p>\r\n                    <p>{{ classico[0].date }}</p>\r\n                </div>\r\n\r\n                <div class=\"song-card\" v-if=\"classico[1]\" @click=\"selectCard(1)\">\r\n                    <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n                    <h3>{{ classico[1].title }}</h3>\r\n                    <p>{{ classico[1].artiste }}</p>\r\n                    <p>{{ classico[1].date }}</p>\r\n                </div>\r\n                <div class=\"song-card\" v-if=\"classico[2]\" @click=\"selectCard(2)\">\r\n                    <!-- <img src=\"../../assets/svg/image.svg\" alt=\"image\"> -->\r\n                    <h3>{{ classico[2].title }}</h3>\r\n                    <p>{{ classico[2].artiste }}</p>\r\n                    <p>{{ classico[2].date }}</p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <button @click=\"validateCard\" disabled id=\"submit\" class=\"submitBtn\" v-show=\"showCards\">{{ $t('VALIDER') }}</button>\r\n        <p v-show=\"isSubmitDisabled && showCards\">{{ $t('EN_ATTENTE_DE_JOUEURS') }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport io from 'socket.io-client';\r\nimport { Howl, Howler } from 'howler';\r\nimport data from './data.json';\r\nimport dataEn from './data-en.json';\r\n\r\ninterface Classico {\r\n    id: number;\r\n    title: string;\r\n    artiste: string;\r\n    anecdote: string;\r\n    date: string;\r\n}\r\n\r\ninterface Rewind {\r\n    username: string;\r\n    foundCount: number;\r\n    noFoundCount: number;\r\n}\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        socket: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        player: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            classico: [] as Classico[],\r\n            room: [] as any,\r\n            currentSound: 0 as any,\r\n            volume: 0.5 as number,\r\n            isSubmitDisabled: false,\r\n            showGame: false,\r\n            showCards: true,\r\n            showRewind: false,\r\n            showResponse: false,\r\n            showListen: true,\r\n            showTimer: true,\r\n            showRoundTimer: true,\r\n            showResponseTimer: false,\r\n            showEnd: false,\r\n            rewindObj: {} as Rewind,\r\n            rewindAll: [] as any,\r\n            rewindCounter: 0 as number,\r\n            selectedCard: -1 as number,\r\n            randomSong: 0 as number,\r\n            currentTurn: 0 as number,\r\n            maxTurns: 1,\r\n            nextRoundCounter: 0 as number,\r\n            turnDuration: 40,\r\n            responseDuration: 40,\r\n            timer: 30,\r\n            responseTimer: 15,\r\n            timerInterval: 0 as any,\r\n            responseInterval: 0 as any,\r\n            foundCount: 0 as number,\r\n            noFoundCount: 0 as number,\r\n            validated: false,\r\n            lang: '',\r\n        } //Ne pas oublier de changer le maxTurn aussi dans resetGame\r\n    },\r\n\r\n    computed: {\r\n        sortedRewindAll() {\r\n            return this.rewindAll.slice().sort((a: any, b: any) => b.foundCount - a.foundCount);\r\n        },\r\n        maxScore() {\r\n            return Math.max(...this.rewindAll.map((player: any) => player.foundCount));\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        const getLang = localStorage.getItem('lang');\r\n        if(getLang){\r\n            this.lang = getLang;\r\n        } else{\r\n            this.lang = 'fr';\r\n            localStorage.setItem('lang',this.lang);\r\n        }\r\n\r\n        this.maxTurns--;\r\n\r\n        this.socket.on(\"CLASSICO/start game\", () => {\r\n            if (this.player.host) {\r\n                console.log(\"START GAME\");\r\n                \r\n                this.randomizeClassico();\r\n            }\r\n        });\r\n\r\n        this.socket.on(\"randomize\", (classico: Classico[], randomSong: number) => {\r\n            if (!this.player.host) {\r\n                this.classico = classico;\r\n                this.randomSong = randomSong;\r\n            }\r\n\r\n            const soundToPlay = this.classico[this.randomSong].id;\r\n            this.playSound(soundToPlay);\r\n\r\n            this.turnTimer();\r\n            this.showGame = true;\r\n        });\r\n\r\n        this.socket.on(\"CLASSICO/nextRound\", (room: any) => {\r\n            this.room = room;\r\n            this.nextRoundCounter++;\r\n            this.selectedCard = -1;\r\n            this.validated = false;\r\n\r\n            this.timer = this.turnDuration;\r\n\r\n            if (this.room.players.length === this.nextRoundCounter && this.currentTurn < this.maxTurns) {\r\n                if (this.player.host) {\r\n                    this.randomizeClassico();\r\n                }\r\n\r\n                this.stopSound();\r\n\r\n                const cards: any = document.querySelectorAll(\".song-card\");\r\n\r\n                cards.forEach((card: any) => {\r\n                    card.style.backgroundColor = \"#19647e\";\r\n                    card.style.color = \"#f9fafa\";\r\n\r\n                });\r\n\r\n                const submit: any = document.getElementById(\"submit\");\r\n                submit.disabled = false;\r\n                this.isSubmitDisabled = false;\r\n                // const afterSelectionDiv: any = document.querySelector(\".after-selection\");\r\n\r\n                // afterSelectionDiv.style.opacity = \"0\";\r\n                // afterSelectionDiv.style.pointerEvents = \"none\";\r\n\r\n                this.currentTurn++;\r\n                this.nextRoundCounter = 0;\r\n            }\r\n\r\n            if (this.room.players.length === this.nextRoundCounter && this.currentTurn === this.maxTurns) {\r\n                this.showGame = false;\r\n                this.showTimer = false;\r\n                this.showCards = false;\r\n                this.clearIntervals();\r\n                this.stopSound();\r\n                this.showRewind = true;\r\n                this.socket.emit(\"CLASSICO/rewind\", this.rewindObj, this.player);\r\n            }\r\n        });\r\n\r\n        this.socket.on('CLASSICO/final rewind', (room: any) => {\r\n\r\n            this.rewindCounter++;\r\n\r\n            if (this.rewindCounter === room.rewind.length) {\r\n                this.showRewind = true;\r\n\r\n            }\r\n            this.rewindAll = room.rewind;\r\n        });\r\n\r\n        this.socket.on('CLASSICO/endgame', () => {\r\n            if (!this.player.host) {\r\n                this.endgame();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    methods: {\r\n        turnTimer() {\r\n            this.showRoundTimer = true;\r\n            this.showResponseTimer = false;\r\n            this.showListen = true;\r\n            this.showCards = true;\r\n            this.clearIntervals();\r\n            this.timer = this.turnDuration;\r\n            this.showResponse = false;\r\n\r\n            this.timerInterval = setInterval(() => {\r\n                if (this.timer === 0) {\r\n                    this.timer = this.turnDuration;\r\n                    if (!this.validated) {\r\n                        this.validateCard();\r\n                    }\r\n                    this.displayResponse();\r\n                } else {\r\n                    this.timer--;\r\n                }\r\n            }, 1000);\r\n        },\r\n\r\n        displayResponse() {\r\n            this.clearIntervals();\r\n            const classico = this.classico[this.randomSong];\r\n\r\n            this.showRoundTimer = false;\r\n            this.showCards = false;\r\n            this.showListen = false;\r\n            this.showResponseTimer = true;\r\n            const title = document.getElementById(\"response\")!;\r\n            title.innerText = `${classico.title}, ${classico.artiste}, ${classico.date}`;\r\n\r\n            const anecdote = document.getElementById(\"anecdote\")!;\r\n            anecdote.innerText = classico.anecdote;\r\n\r\n            this.responseTimer = this.responseDuration;\r\n            this.showResponse = true;\r\n\r\n            this.responseInterval = setInterval(() => {\r\n                if (this.responseTimer === 0) {\r\n                    this.stopSound();\r\n                    this.socket.emit(\"CLASSICO/nextRound\", this.player.roomId);\r\n                    this.turnTimer();\r\n                } else {\r\n                    this.responseTimer--;\r\n                }\r\n            }, 1000);\r\n        },\r\n\r\n        clearIntervals() {\r\n            if (this.timerInterval) {\r\n                clearInterval(this.timerInterval);\r\n                this.timerInterval = null;\r\n            }\r\n            if (this.responseInterval) {\r\n                clearInterval(this.responseInterval);\r\n                this.responseInterval = null;\r\n            }\r\n        },\r\n\r\n        playSound(note: number) {\r\n            this.stopSound();\r\n            // Charger et jouer le son correspondant à la note\r\n            this.currentSound = new Howl({\r\n                src: [`./musics/${note}.mp3`], // Chemin vers les fichiers audio locaux\r\n                volume: 0.5\r\n            });\r\n\r\n            this.currentSound.play();\r\n        },\r\n\r\n        stopSound() {\r\n            // Arrêter le son en cours\r\n            if (this.currentSound) {\r\n                Howler.stop();\r\n            }\r\n        },\r\n\r\n        setVolume() {\r\n            if (this.currentSound) {\r\n                this.currentSound.volume(this.volume);\r\n            }\r\n        },\r\n\r\n        randomizeClassico() {\r\n            if(this.lang == \"fr\"){\r\n                const classico: Classico[] = data.classico;\r\n                classico.sort(() => Math.random() - 0.5);\r\n                this.classico = classico.slice(0, 3);\r\n\r\n                this.randomSong = Math.floor(Math.random() * 3);\r\n\r\n                this.socket.emit(\"CLASSICO/randomize\", this.classico, this.player.roomId, this.randomSong);\r\n            }else{\r\n                const classico: Classico[] = dataEn.classico;\r\n                classico.sort(() => Math.random() - 0.5);\r\n                this.classico = classico.slice(0, 3);\r\n\r\n                this.randomSong = Math.floor(Math.random() * 3);\r\n\r\n                this.socket.emit(\"CLASSICO/randomize\", this.classico, this.player.roomId, this.randomSong);\r\n            }\r\n        },\r\n\r\n        selectCard(number: number) {\r\n            const cards: any = document.querySelectorAll(\".song-card\");\r\n\r\n            cards.forEach((card: any) => {\r\n                card.style.backgroundColor = \"#19647e\";\r\n                card.style.color = \"#f9fafa\";\r\n\r\n            });\r\n            cards[number].style.backgroundColor = \"#f4d35e\";\r\n            cards[number].style.color = \"#161617\";\r\n\r\n            const submit: any = document.getElementById(\"submit\");\r\n            submit.disabled = false;\r\n            this.selectedCard = number;\r\n        },\r\n\r\n        validateCard() {\r\n            const submit: any = document.getElementById(\"submit\");\r\n            submit.disabled = true;\r\n            this.isSubmitDisabled = true;\r\n\r\n            const cards: any = document.querySelectorAll(\".song-card\");\r\n\r\n            const currentSong = this.classico[this.randomSong].title + \"\\n\\n\" + this.classico[this.randomSong].artiste + \"\\n\\n\" + this.classico[this.randomSong].date;\r\n\r\n            if (this.selectedCard === -1) {\r\n                this.noFoundCount++;\r\n            }\r\n            else {\r\n                if (cards[this.selectedCard].innerText === currentSong) {\r\n                    this.foundCount++;\r\n                }\r\n                else {\r\n                    this.noFoundCount++;\r\n                }\r\n            }\r\n\r\n            this.rewindObj = { username: this.player.username, foundCount: this.foundCount, noFoundCount: this.noFoundCount };\r\n\r\n            // const afterSelectionDiv: any = document.querySelector(\".after-selection\");\r\n\r\n            // afterSelectionDiv.style.opacity = \"0.3\";\r\n            // afterSelectionDiv.style.pointerEvents = \"all\";\r\n            this.validated = true;\r\n        },\r\n\r\n        endgame() {\r\n            this.socket.emit(\"clear rewind\", this.player.roomId);\r\n            this.rewindAll = [];\r\n            this.showEnd = true;\r\n            this.showGame = false;\r\n            this.showRewind = false;\r\n            setTimeout(() => {\r\n                if (this.player.host) {\r\n                    this.socket.emit(\"CLASSICO/endgame\", this.player.roomId);\r\n                }\r\n                this.resetClassicoGame();\r\n            }, 3000)\r\n        },\r\n\r\n        resetClassicoGame() {\r\n            console.log(\"RESET CLASSICO\");\r\n            this.clearIntervals();\r\n            this.classico = [] as Classico[];\r\n            this.room = [] as any;\r\n            this.currentSound = 0 as any;\r\n            this.volume = 0.5 as number;\r\n            this.isSubmitDisabled = false;\r\n            this.showGame = false;\r\n            this.showCards = true;\r\n            this.showRewind = false;\r\n            this.showResponse = false;\r\n            this.showListen = true;\r\n            this.showTimer = true;\r\n            this.showRoundTimer = true;\r\n            this.showResponseTimer = false;\r\n            this.showEnd = false;\r\n            this.rewindObj = {} as Rewind;\r\n            this.rewindAll = [] as any;\r\n            this.rewindCounter = 0 as number;\r\n            this.selectedCard = -1 as number;\r\n            this.randomSong = 0 as number;\r\n            this.currentTurn = 0 as number;\r\n            this.maxTurns = 1;\r\n            this.nextRoundCounter = 0 as number;\r\n            this.turnDuration = 40;\r\n            this.responseDuration = 40;\r\n            this.timer = 30;\r\n            this.responseTimer = 15;\r\n            this.timerInterval = 0 as any;\r\n            this.responseInterval = 0 as any;\r\n            this.foundCount = 0 as number;\r\n            this.noFoundCount = 0 as number;\r\n            this.validated = false;\r\n\r\n            this.maxTurns--;\r\n\r\n            // if (this.player.host) {\r\n            //     this.randomizeClassico();\r\n            // }\r\n\r\n            const cards: any = document.querySelectorAll(\".song-card\");\r\n\r\n            cards.forEach((card: any) => {\r\n                card.style.backgroundColor = \"#19647e\";\r\n                card.style.color = \"#f9fafa\";\r\n\r\n            });\r\n\r\n            const submit: any = document.getElementById(\"submit\");\r\n            submit.disabled = false;\r\n            this.isSubmitDisabled = false;\r\n            // const afterSelectionDiv: any = document.querySelector(\".after-selection\");\r\n\r\n            // afterSelectionDiv.style.opacity = \"0\";\r\n            // afterSelectionDiv.style.pointerEvents = \"none\";\r\n        },\r\n    }\r\n})\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n@import url('./classico.css');\r\n@import url('./classico-mobile.css');\r\n</style>","C:\\Users\\Megal\\Documents\\catchy-party\\src\\assets\\svg\\avatars\\bodies\\index.ts",[],{"ruleId":"224","severity":1,"message":"225","line":11,"column":27,"nodeType":"226","messageId":"227","endLine":11,"endColumn":30},{"ruleId":"224","severity":1,"message":"228","line":12,"column":10,"nodeType":"226","messageId":"227","endLine":12,"endColumn":20},{"ruleId":"224","severity":1,"message":"229","line":12,"column":22,"nodeType":"226","messageId":"227","endLine":12,"endColumn":32},{"ruleId":"224","severity":1,"message":"228","line":16,"column":10,"nodeType":"226","messageId":"227","endLine":16,"endColumn":20},{"ruleId":"224","severity":1,"message":"229","line":16,"column":22,"nodeType":"226","messageId":"227","endLine":16,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":45,"column":27,"nodeType":"226","messageId":"227","endLine":45,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":15,"column":27,"nodeType":"226","messageId":"227","endLine":15,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":107,"column":27,"nodeType":"226","messageId":"227","endLine":107,"endColumn":30},{"ruleId":"224","severity":1,"message":"230","line":108,"column":8,"nodeType":"226","messageId":"227","endLine":108,"endColumn":10},{"ruleId":"224","severity":1,"message":"231","line":114,"column":10,"nodeType":"226","messageId":"227","endLine":114,"endColumn":14},{"ruleId":"232","severity":1,"message":"233","line":210,"column":46,"nodeType":"234","messageId":"235","endLine":210,"endColumn":49,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":220,"column":13,"nodeType":"239","messageId":"240","endLine":220,"endColumn":24},{"ruleId":"237","severity":1,"message":"238","line":231,"column":17,"nodeType":"239","messageId":"240","endLine":231,"endColumn":28},{"ruleId":"237","severity":1,"message":"238","line":238,"column":13,"nodeType":"239","messageId":"240","endLine":238,"endColumn":24},{"ruleId":"237","severity":1,"message":"238","line":239,"column":13,"nodeType":"239","messageId":"240","endLine":239,"endColumn":24},{"ruleId":"237","severity":1,"message":"238","line":244,"column":21,"nodeType":"239","messageId":"240","endLine":244,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":248,"column":21,"nodeType":"239","messageId":"240","endLine":248,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":255,"column":21,"nodeType":"239","messageId":"240","endLine":255,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":273,"column":17,"nodeType":"239","messageId":"240","endLine":273,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":306,"column":35,"nodeType":"234","messageId":"235","endLine":306,"endColumn":38,"suggestions":"241"},{"ruleId":"232","severity":1,"message":"233","line":394,"column":25,"nodeType":"234","messageId":"235","endLine":394,"endColumn":28,"suggestions":"242"},{"ruleId":"237","severity":1,"message":"238","line":407,"column":21,"nodeType":"239","messageId":"240","endLine":407,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":428,"column":17,"nodeType":"239","messageId":"240","endLine":428,"endColumn":30},{"ruleId":"232","severity":1,"message":"233","line":473,"column":34,"nodeType":"234","messageId":"235","endLine":473,"endColumn":37,"suggestions":"243"},{"ruleId":"224","severity":1,"message":"225","line":21,"column":27,"nodeType":"226","messageId":"227","endLine":21,"endColumn":30},{"ruleId":"232","severity":1,"message":"233","line":122,"column":19,"nodeType":"234","messageId":"235","endLine":122,"endColumn":22,"suggestions":"244"},{"ruleId":"232","severity":1,"message":"233","line":127,"column":24,"nodeType":"234","messageId":"235","endLine":127,"endColumn":27,"suggestions":"245"},{"ruleId":"232","severity":1,"message":"233","line":128,"column":27,"nodeType":"234","messageId":"235","endLine":128,"endColumn":30,"suggestions":"246"},{"ruleId":"232","severity":1,"message":"233","line":148,"column":40,"nodeType":"234","messageId":"235","endLine":148,"endColumn":43,"suggestions":"247"},{"ruleId":"232","severity":1,"message":"233","line":158,"column":22,"nodeType":"234","messageId":"235","endLine":158,"endColumn":25,"suggestions":"248"},{"ruleId":"232","severity":1,"message":"233","line":160,"column":30,"nodeType":"234","messageId":"235","endLine":160,"endColumn":33,"suggestions":"249"},{"ruleId":"232","severity":1,"message":"233","line":166,"column":23,"nodeType":"234","messageId":"235","endLine":166,"endColumn":26,"suggestions":"250"},{"ruleId":"237","severity":1,"message":"238","line":175,"column":9,"nodeType":"239","messageId":"240","endLine":175,"endColumn":20},{"ruleId":"232","severity":1,"message":"233","line":186,"column":47,"nodeType":"234","messageId":"235","endLine":186,"endColumn":50,"suggestions":"251"},{"ruleId":"237","severity":1,"message":"238","line":193,"column":9,"nodeType":"239","messageId":"240","endLine":193,"endColumn":20},{"ruleId":"232","severity":1,"message":"233","line":239,"column":25,"nodeType":"234","messageId":"235","endLine":239,"endColumn":28,"suggestions":"252"},{"ruleId":"232","severity":1,"message":"233","line":243,"column":30,"nodeType":"234","messageId":"235","endLine":243,"endColumn":33,"suggestions":"253"},{"ruleId":"232","severity":1,"message":"233","line":250,"column":20,"nodeType":"234","messageId":"235","endLine":250,"endColumn":23,"suggestions":"254"},{"ruleId":"232","severity":1,"message":"233","line":252,"column":28,"nodeType":"234","messageId":"235","endLine":252,"endColumn":31,"suggestions":"255"},{"ruleId":"232","severity":1,"message":"233","line":258,"column":21,"nodeType":"234","messageId":"235","endLine":258,"endColumn":24,"suggestions":"256"},{"ruleId":"232","severity":1,"message":"233","line":268,"column":20,"nodeType":"234","messageId":"235","endLine":268,"endColumn":23,"suggestions":"257"},{"ruleId":"232","severity":1,"message":"233","line":271,"column":28,"nodeType":"234","messageId":"235","endLine":271,"endColumn":31,"suggestions":"258"},{"ruleId":"232","severity":1,"message":"233","line":280,"column":21,"nodeType":"234","messageId":"235","endLine":280,"endColumn":24,"suggestions":"259"},{"ruleId":"232","severity":1,"message":"233","line":303,"column":21,"nodeType":"234","messageId":"235","endLine":303,"endColumn":24,"suggestions":"260"},{"ruleId":"232","severity":1,"message":"233","line":307,"column":20,"nodeType":"234","messageId":"235","endLine":307,"endColumn":23,"suggestions":"261"},{"ruleId":"237","severity":1,"message":"238","line":308,"column":7,"nodeType":"239","messageId":"240","endLine":308,"endColumn":18},{"ruleId":"232","severity":1,"message":"233","line":312,"column":28,"nodeType":"234","messageId":"235","endLine":312,"endColumn":31,"suggestions":"262"},{"ruleId":"237","severity":1,"message":"238","line":330,"column":7,"nodeType":"239","messageId":"240","endLine":330,"endColumn":18},{"ruleId":"224","severity":1,"message":"225","line":38,"column":31,"nodeType":"226","messageId":"227","endLine":38,"endColumn":34},{"ruleId":"224","severity":1,"message":"230","line":112,"column":8,"nodeType":"226","messageId":"227","endLine":112,"endColumn":10},{"ruleId":"224","severity":1,"message":"263","line":114,"column":10,"nodeType":"226","messageId":"227","endLine":114,"endColumn":13},{"ruleId":"224","severity":1,"message":"264","line":131,"column":11,"nodeType":"226","messageId":"227","endLine":131,"endColumn":15},{"ruleId":"232","severity":1,"message":"233","line":148,"column":20,"nodeType":"234","messageId":"235","endLine":148,"endColumn":23,"suggestions":"265"},{"ruleId":"232","severity":1,"message":"233","line":208,"column":33,"nodeType":"234","messageId":"235","endLine":208,"endColumn":36,"suggestions":"266"},{"ruleId":"232","severity":1,"message":"233","line":214,"column":27,"nodeType":"234","messageId":"235","endLine":214,"endColumn":30,"suggestions":"267"},{"ruleId":"232","severity":1,"message":"233","line":228,"column":51,"nodeType":"234","messageId":"235","endLine":228,"endColumn":54,"suggestions":"268"},{"ruleId":"232","severity":1,"message":"233","line":229,"column":45,"nodeType":"234","messageId":"235","endLine":229,"endColumn":48,"suggestions":"269"},{"ruleId":"232","severity":1,"message":"233","line":230,"column":39,"nodeType":"234","messageId":"235","endLine":230,"endColumn":42,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":257,"column":37,"nodeType":"273","messageId":"274","endLine":257,"endColumn":86},{"ruleId":"232","severity":1,"message":"233","line":271,"column":50,"nodeType":"234","messageId":"235","endLine":271,"endColumn":53,"suggestions":"275"},{"ruleId":"232","severity":1,"message":"233","line":283,"column":56,"nodeType":"234","messageId":"235","endLine":283,"endColumn":59,"suggestions":"276"},{"ruleId":"237","severity":1,"message":"238","line":286,"column":13,"nodeType":"239","messageId":"240","endLine":286,"endColumn":24},{"ruleId":"237","severity":1,"message":"238","line":287,"column":13,"nodeType":"239","messageId":"240","endLine":287,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":295,"column":55,"nodeType":"234","messageId":"235","endLine":295,"endColumn":58,"suggestions":"277"},{"ruleId":"237","severity":1,"message":"238","line":297,"column":13,"nodeType":"239","messageId":"240","endLine":297,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":310,"column":48,"nodeType":"234","messageId":"235","endLine":310,"endColumn":51,"suggestions":"278"},{"ruleId":"232","severity":1,"message":"233","line":313,"column":38,"nodeType":"234","messageId":"235","endLine":313,"endColumn":41,"suggestions":"279"},{"ruleId":"237","severity":1,"message":"238","line":322,"column":21,"nodeType":"239","messageId":"240","endLine":322,"endColumn":32},{"ruleId":"237","severity":1,"message":"238","line":335,"column":13,"nodeType":"239","messageId":"240","endLine":335,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":398,"column":31,"nodeType":"234","messageId":"235","endLine":398,"endColumn":34,"suggestions":"280"},{"ruleId":"232","severity":1,"message":"233","line":404,"column":44,"nodeType":"234","messageId":"235","endLine":404,"endColumn":47,"suggestions":"281"},{"ruleId":"224","severity":1,"message":"282","line":404,"column":49,"nodeType":"226","messageId":"227","endLine":404,"endColumn":59},{"ruleId":"232","severity":1,"message":"233","line":404,"column":56,"nodeType":"234","messageId":"235","endLine":404,"endColumn":59,"suggestions":"283"},{"ruleId":"237","severity":1,"message":"238","line":414,"column":29,"nodeType":"239","messageId":"240","endLine":414,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":418,"column":33,"nodeType":"239","messageId":"240","endLine":418,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":421,"column":29,"nodeType":"239","messageId":"240","endLine":421,"endColumn":40},{"ruleId":"237","severity":1,"message":"238","line":535,"column":33,"nodeType":"239","messageId":"240","endLine":535,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":537,"column":33,"nodeType":"239","messageId":"240","endLine":537,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":542,"column":33,"nodeType":"239","messageId":"240","endLine":542,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":546,"column":33,"nodeType":"239","messageId":"240","endLine":546,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":559,"column":25,"nodeType":"239","messageId":"240","endLine":559,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":571,"column":13,"nodeType":"239","messageId":"240","endLine":571,"endColumn":24},{"ruleId":"237","severity":1,"message":"238","line":573,"column":13,"nodeType":"239","messageId":"240","endLine":573,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":612,"column":33,"nodeType":"234","messageId":"235","endLine":612,"endColumn":36,"suggestions":"284"},{"ruleId":"237","severity":1,"message":"238","line":653,"column":13,"nodeType":"239","messageId":"240","endLine":653,"endColumn":24},{"ruleId":"224","severity":1,"message":"230","line":77,"column":8,"nodeType":"226","messageId":"227","endLine":77,"endColumn":10},{"ruleId":"232","severity":1,"message":"233","line":111,"column":25,"nodeType":"234","messageId":"235","endLine":111,"endColumn":28,"suggestions":"285"},{"ruleId":"232","severity":1,"message":"233","line":112,"column":32,"nodeType":"234","messageId":"235","endLine":112,"endColumn":35,"suggestions":"286"},{"ruleId":"232","severity":1,"message":"233","line":125,"column":30,"nodeType":"234","messageId":"235","endLine":125,"endColumn":33,"suggestions":"287"},{"ruleId":"232","severity":1,"message":"233","line":136,"column":33,"nodeType":"234","messageId":"235","endLine":136,"endColumn":36,"suggestions":"288"},{"ruleId":"232","severity":1,"message":"233","line":137,"column":36,"nodeType":"234","messageId":"235","endLine":137,"endColumn":39,"suggestions":"289"},{"ruleId":"232","severity":1,"message":"233","line":147,"column":52,"nodeType":"234","messageId":"235","endLine":147,"endColumn":55,"suggestions":"290"},{"ruleId":"232","severity":1,"message":"233","line":147,"column":60,"nodeType":"234","messageId":"235","endLine":147,"endColumn":63,"suggestions":"291"},{"ruleId":"232","severity":1,"message":"233","line":150,"column":60,"nodeType":"234","messageId":"235","endLine":150,"endColumn":63,"suggestions":"292"},{"ruleId":"237","severity":1,"message":"238","line":167,"column":17,"nodeType":"239","messageId":"240","endLine":167,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":186,"column":53,"nodeType":"234","messageId":"235","endLine":186,"endColumn":56,"suggestions":"293"},{"ruleId":"232","severity":1,"message":"233","line":201,"column":30,"nodeType":"234","messageId":"235","endLine":201,"endColumn":33,"suggestions":"294"},{"ruleId":"232","severity":1,"message":"233","line":203,"column":38,"nodeType":"234","messageId":"235","endLine":203,"endColumn":41,"suggestions":"295"},{"ruleId":"232","severity":1,"message":"233","line":209,"column":31,"nodeType":"234","messageId":"235","endLine":209,"endColumn":34,"suggestions":"296"},{"ruleId":"232","severity":1,"message":"233","line":232,"column":56,"nodeType":"234","messageId":"235","endLine":232,"endColumn":59,"suggestions":"297"},{"ruleId":"271","severity":1,"message":"272","line":282,"column":27,"nodeType":"273","messageId":"274","endLine":282,"endColumn":63},{"ruleId":"271","severity":1,"message":"272","line":285,"column":30,"nodeType":"273","messageId":"274","endLine":285,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":358,"column":26,"nodeType":"234","messageId":"235","endLine":358,"endColumn":29,"suggestions":"298"},{"ruleId":"232","severity":1,"message":"233","line":360,"column":34,"nodeType":"234","messageId":"235","endLine":360,"endColumn":37,"suggestions":"299"},{"ruleId":"232","severity":1,"message":"233","line":368,"column":27,"nodeType":"234","messageId":"235","endLine":368,"endColumn":30,"suggestions":"300"},{"ruleId":"232","severity":1,"message":"233","line":374,"column":27,"nodeType":"234","messageId":"235","endLine":374,"endColumn":30,"suggestions":"301"},{"ruleId":"232","severity":1,"message":"233","line":378,"column":26,"nodeType":"234","messageId":"235","endLine":378,"endColumn":29,"suggestions":"302"},{"ruleId":"237","severity":1,"message":"238","line":418,"column":13,"nodeType":"239","messageId":"240","endLine":418,"endColumn":24},{"ruleId":"232","severity":1,"message":"233","line":421,"column":31,"nodeType":"234","messageId":"235","endLine":421,"endColumn":34,"suggestions":"303"},{"ruleId":"232","severity":1,"message":"233","line":422,"column":38,"nodeType":"234","messageId":"235","endLine":422,"endColumn":41,"suggestions":"304"},{"ruleId":"232","severity":1,"message":"233","line":435,"column":36,"nodeType":"234","messageId":"235","endLine":435,"endColumn":39,"suggestions":"305"},{"ruleId":"232","severity":1,"message":"233","line":446,"column":39,"nodeType":"234","messageId":"235","endLine":446,"endColumn":42,"suggestions":"306"},{"ruleId":"232","severity":1,"message":"233","line":447,"column":42,"nodeType":"234","messageId":"235","endLine":447,"endColumn":45,"suggestions":"307"},{"ruleId":"232","severity":1,"message":"233","line":458,"column":26,"nodeType":"234","messageId":"235","endLine":458,"endColumn":29,"suggestions":"308"},{"ruleId":"232","severity":1,"message":"233","line":460,"column":34,"nodeType":"234","messageId":"235","endLine":460,"endColumn":37,"suggestions":"309"},{"ruleId":"232","severity":1,"message":"233","line":466,"column":27,"nodeType":"234","messageId":"235","endLine":466,"endColumn":30,"suggestions":"310"},"@typescript-eslint/no-unused-vars","'ref' is defined but never used.","Identifier","unusedVar","'RouterLink' is defined but never used.","'RouterView' is defined but never used.","'io' is defined but never used.","'Emit' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["311","312"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],["341","342"],["343","344"],["345","346"],["347","348"],["349","350"],["351","352"],["353","354"],["355","356"],"'all' is defined but never used.","'Item' is defined but never used.",["357","358"],["359","360"],["361","362"],["363","364"],["365","366"],["367","368"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["369","370"],["371","372"],["373","374"],["375","376"],["377","378"],["379","380"],["381","382"],"'index' is defined but never used.",["383","384"],["385","386"],["387","388"],["389","390"],["391","392"],["393","394"],["395","396"],["397","398"],["399","400"],["401","402"],["403","404"],["405","406"],["407","408"],["409","410"],["411","412"],["413","414"],["415","416"],["417","418"],["419","420"],["421","422"],["423","424"],["425","426"],["427","428"],["429","430"],["431","432"],["433","434"],["435","436"],["437","438"],{"messageId":"439","fix":"440","desc":"441"},{"messageId":"442","fix":"443","desc":"444"},{"messageId":"439","fix":"445","desc":"441"},{"messageId":"442","fix":"446","desc":"444"},{"messageId":"439","fix":"447","desc":"441"},{"messageId":"442","fix":"448","desc":"444"},{"messageId":"439","fix":"449","desc":"441"},{"messageId":"442","fix":"450","desc":"444"},{"messageId":"439","fix":"451","desc":"441"},{"messageId":"442","fix":"452","desc":"444"},{"messageId":"439","fix":"453","desc":"441"},{"messageId":"442","fix":"454","desc":"444"},{"messageId":"439","fix":"455","desc":"441"},{"messageId":"442","fix":"456","desc":"444"},{"messageId":"439","fix":"457","desc":"441"},{"messageId":"442","fix":"458","desc":"444"},{"messageId":"439","fix":"459","desc":"441"},{"messageId":"442","fix":"460","desc":"444"},{"messageId":"439","fix":"461","desc":"441"},{"messageId":"442","fix":"462","desc":"444"},{"messageId":"439","fix":"463","desc":"441"},{"messageId":"442","fix":"464","desc":"444"},{"messageId":"439","fix":"465","desc":"441"},{"messageId":"442","fix":"466","desc":"444"},{"messageId":"439","fix":"467","desc":"441"},{"messageId":"442","fix":"468","desc":"444"},{"messageId":"439","fix":"469","desc":"441"},{"messageId":"442","fix":"470","desc":"444"},{"messageId":"439","fix":"471","desc":"441"},{"messageId":"442","fix":"472","desc":"444"},{"messageId":"439","fix":"473","desc":"441"},{"messageId":"442","fix":"474","desc":"444"},{"messageId":"439","fix":"475","desc":"441"},{"messageId":"442","fix":"476","desc":"444"},{"messageId":"439","fix":"477","desc":"441"},{"messageId":"442","fix":"478","desc":"444"},{"messageId":"439","fix":"479","desc":"441"},{"messageId":"442","fix":"480","desc":"444"},{"messageId":"439","fix":"481","desc":"441"},{"messageId":"442","fix":"482","desc":"444"},{"messageId":"439","fix":"483","desc":"441"},{"messageId":"442","fix":"484","desc":"444"},{"messageId":"439","fix":"485","desc":"441"},{"messageId":"442","fix":"486","desc":"444"},{"messageId":"439","fix":"487","desc":"441"},{"messageId":"442","fix":"488","desc":"444"},{"messageId":"439","fix":"489","desc":"441"},{"messageId":"442","fix":"490","desc":"444"},{"messageId":"439","fix":"491","desc":"441"},{"messageId":"442","fix":"492","desc":"444"},{"messageId":"439","fix":"493","desc":"441"},{"messageId":"442","fix":"494","desc":"444"},{"messageId":"439","fix":"495","desc":"441"},{"messageId":"442","fix":"496","desc":"444"},{"messageId":"439","fix":"497","desc":"441"},{"messageId":"442","fix":"498","desc":"444"},{"messageId":"439","fix":"499","desc":"441"},{"messageId":"442","fix":"500","desc":"444"},{"messageId":"439","fix":"501","desc":"441"},{"messageId":"442","fix":"502","desc":"444"},{"messageId":"439","fix":"503","desc":"441"},{"messageId":"442","fix":"504","desc":"444"},{"messageId":"439","fix":"505","desc":"441"},{"messageId":"442","fix":"506","desc":"444"},{"messageId":"439","fix":"507","desc":"441"},{"messageId":"442","fix":"508","desc":"444"},{"messageId":"439","fix":"509","desc":"441"},{"messageId":"442","fix":"510","desc":"444"},{"messageId":"439","fix":"511","desc":"441"},{"messageId":"442","fix":"512","desc":"444"},{"messageId":"439","fix":"513","desc":"441"},{"messageId":"442","fix":"514","desc":"444"},{"messageId":"439","fix":"515","desc":"441"},{"messageId":"442","fix":"516","desc":"444"},{"messageId":"439","fix":"517","desc":"441"},{"messageId":"442","fix":"518","desc":"444"},{"messageId":"439","fix":"519","desc":"441"},{"messageId":"442","fix":"520","desc":"444"},{"messageId":"439","fix":"521","desc":"441"},{"messageId":"442","fix":"522","desc":"444"},{"messageId":"439","fix":"523","desc":"441"},{"messageId":"442","fix":"524","desc":"444"},{"messageId":"439","fix":"525","desc":"441"},{"messageId":"442","fix":"526","desc":"444"},{"messageId":"439","fix":"527","desc":"441"},{"messageId":"442","fix":"528","desc":"444"},{"messageId":"439","fix":"529","desc":"441"},{"messageId":"442","fix":"530","desc":"444"},{"messageId":"439","fix":"531","desc":"441"},{"messageId":"442","fix":"532","desc":"444"},{"messageId":"439","fix":"533","desc":"441"},{"messageId":"442","fix":"534","desc":"444"},{"messageId":"439","fix":"535","desc":"441"},{"messageId":"442","fix":"536","desc":"444"},{"messageId":"439","fix":"537","desc":"441"},{"messageId":"442","fix":"538","desc":"444"},{"messageId":"439","fix":"539","desc":"441"},{"messageId":"442","fix":"540","desc":"444"},{"messageId":"439","fix":"541","desc":"441"},{"messageId":"442","fix":"542","desc":"444"},{"messageId":"439","fix":"543","desc":"441"},{"messageId":"442","fix":"544","desc":"444"},{"messageId":"439","fix":"545","desc":"441"},{"messageId":"442","fix":"546","desc":"444"},{"messageId":"439","fix":"547","desc":"441"},{"messageId":"442","fix":"548","desc":"444"},{"messageId":"439","fix":"549","desc":"441"},{"messageId":"442","fix":"550","desc":"444"},{"messageId":"439","fix":"551","desc":"441"},{"messageId":"442","fix":"552","desc":"444"},{"messageId":"439","fix":"553","desc":"441"},{"messageId":"442","fix":"554","desc":"444"},{"messageId":"439","fix":"555","desc":"441"},{"messageId":"442","fix":"556","desc":"444"},{"messageId":"439","fix":"557","desc":"441"},{"messageId":"442","fix":"558","desc":"444"},{"messageId":"439","fix":"559","desc":"441"},{"messageId":"442","fix":"560","desc":"444"},{"messageId":"439","fix":"561","desc":"441"},{"messageId":"442","fix":"562","desc":"444"},{"messageId":"439","fix":"563","desc":"441"},{"messageId":"442","fix":"564","desc":"444"},{"messageId":"439","fix":"565","desc":"441"},{"messageId":"442","fix":"566","desc":"444"},{"messageId":"439","fix":"567","desc":"441"},{"messageId":"442","fix":"568","desc":"444"},{"messageId":"439","fix":"569","desc":"441"},{"messageId":"442","fix":"570","desc":"444"},"suggestUnknown",{"range":"571","text":"572"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"571","text":"573"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"574","text":"572"},{"range":"574","text":"573"},{"range":"575","text":"572"},{"range":"575","text":"573"},{"range":"576","text":"572"},{"range":"576","text":"573"},{"range":"577","text":"572"},{"range":"577","text":"573"},{"range":"578","text":"572"},{"range":"578","text":"573"},{"range":"579","text":"572"},{"range":"579","text":"573"},{"range":"580","text":"572"},{"range":"580","text":"573"},{"range":"581","text":"572"},{"range":"581","text":"573"},{"range":"582","text":"572"},{"range":"582","text":"573"},{"range":"583","text":"572"},{"range":"583","text":"573"},{"range":"584","text":"572"},{"range":"584","text":"573"},{"range":"585","text":"572"},{"range":"585","text":"573"},{"range":"586","text":"572"},{"range":"586","text":"573"},{"range":"587","text":"572"},{"range":"587","text":"573"},{"range":"588","text":"572"},{"range":"588","text":"573"},{"range":"589","text":"572"},{"range":"589","text":"573"},{"range":"590","text":"572"},{"range":"590","text":"573"},{"range":"591","text":"572"},{"range":"591","text":"573"},{"range":"592","text":"572"},{"range":"592","text":"573"},{"range":"593","text":"572"},{"range":"593","text":"573"},{"range":"594","text":"572"},{"range":"594","text":"573"},{"range":"595","text":"572"},{"range":"595","text":"573"},{"range":"596","text":"572"},{"range":"596","text":"573"},{"range":"597","text":"572"},{"range":"597","text":"573"},{"range":"598","text":"572"},{"range":"598","text":"573"},{"range":"599","text":"572"},{"range":"599","text":"573"},{"range":"600","text":"572"},{"range":"600","text":"573"},{"range":"601","text":"572"},{"range":"601","text":"573"},{"range":"602","text":"572"},{"range":"602","text":"573"},{"range":"603","text":"572"},{"range":"603","text":"573"},{"range":"604","text":"572"},{"range":"604","text":"573"},{"range":"605","text":"572"},{"range":"605","text":"573"},{"range":"606","text":"572"},{"range":"606","text":"573"},{"range":"607","text":"572"},{"range":"607","text":"573"},{"range":"608","text":"572"},{"range":"608","text":"573"},{"range":"609","text":"572"},{"range":"609","text":"573"},{"range":"610","text":"572"},{"range":"610","text":"573"},{"range":"611","text":"572"},{"range":"611","text":"573"},{"range":"612","text":"572"},{"range":"612","text":"573"},{"range":"613","text":"572"},{"range":"613","text":"573"},{"range":"614","text":"572"},{"range":"614","text":"573"},{"range":"615","text":"572"},{"range":"615","text":"573"},{"range":"616","text":"572"},{"range":"616","text":"573"},{"range":"617","text":"572"},{"range":"617","text":"573"},{"range":"618","text":"572"},{"range":"618","text":"573"},{"range":"619","text":"572"},{"range":"619","text":"573"},{"range":"620","text":"572"},{"range":"620","text":"573"},{"range":"621","text":"572"},{"range":"621","text":"573"},{"range":"622","text":"572"},{"range":"622","text":"573"},{"range":"623","text":"572"},{"range":"623","text":"573"},{"range":"624","text":"572"},{"range":"624","text":"573"},{"range":"625","text":"572"},{"range":"625","text":"573"},{"range":"626","text":"572"},{"range":"626","text":"573"},{"range":"627","text":"572"},{"range":"627","text":"573"},{"range":"628","text":"572"},{"range":"628","text":"573"},{"range":"629","text":"572"},{"range":"629","text":"573"},{"range":"630","text":"572"},{"range":"630","text":"573"},{"range":"631","text":"572"},{"range":"631","text":"573"},{"range":"632","text":"572"},{"range":"632","text":"573"},{"range":"633","text":"572"},{"range":"633","text":"573"},{"range":"634","text":"572"},{"range":"634","text":"573"},{"range":"635","text":"572"},{"range":"635","text":"573"},{"range":"636","text":"572"},{"range":"636","text":"573"},[8843,8846],"unknown","never",[12126,12129],[15324,15327],[18074,18077],[4326,4329],[4459,4462],[4491,4494],[4970,4973],[5237,5240],[5316,5319],[5503,5506],[6237,6240],[7882,7885],[8013,8016],[8171,8174],[8248,8251],[8382,8385],[8754,8757],[8839,8842],[9077,9080],[9917,9920],[10048,10051],[10313,10316],[6871,6874],[8690,8693],[8906,8909],[9281,9284],[9339,9342],[9388,9391],[10944,10947],[11264,11267],[11723,11726],[12108,12111],[12202,12205],[15540,15543],[15797,15800],[15809,15812],[24259,24262],[4180,4183],[4217,4220],[4654,4657],[5043,5046],[5084,5087],[5400,5403],[5408,5411],[5540,5543],[6563,6566],[7048,7051],[7135,7138],[7313,7316],[8284,8287],[12390,12393],[12473,12476],[12749,12752],[12936,12939],[13085,13088],[14720,14723],[14763,14766],[15278,15281],[15733,15736],[15780,15783],[16078,16081],[16161,16164],[16323,16326]]